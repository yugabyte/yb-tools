// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: yb/consensus/consensus_types.proto

package consensus

import (
	common "github.com/yugabyte/yb-tools/yugatool/api/yb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChangeConfigType int32

const (
	ChangeConfigType_UNKNOWN_CHANGE ChangeConfigType = 0
	ChangeConfigType_ADD_SERVER     ChangeConfigType = 1
	ChangeConfigType_REMOVE_SERVER  ChangeConfigType = 2
	ChangeConfigType_CHANGE_ROLE    ChangeConfigType = 3
)

// Enum value maps for ChangeConfigType.
var (
	ChangeConfigType_name = map[int32]string{
		0: "UNKNOWN_CHANGE",
		1: "ADD_SERVER",
		2: "REMOVE_SERVER",
		3: "CHANGE_ROLE",
	}
	ChangeConfigType_value = map[string]int32{
		"UNKNOWN_CHANGE": 0,
		"ADD_SERVER":     1,
		"REMOVE_SERVER":  2,
		"CHANGE_ROLE":    3,
	}
)

func (x ChangeConfigType) Enum() *ChangeConfigType {
	p := new(ChangeConfigType)
	*p = x
	return p
}

func (x ChangeConfigType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeConfigType) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_consensus_consensus_types_proto_enumTypes[0].Descriptor()
}

func (ChangeConfigType) Type() protoreflect.EnumType {
	return &file_yb_consensus_consensus_types_proto_enumTypes[0]
}

func (x ChangeConfigType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ChangeConfigType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ChangeConfigType(num)
	return nil
}

// Deprecated: Use ChangeConfigType.Descriptor instead.
func (ChangeConfigType) EnumDescriptor() ([]byte, []int) {
	return file_yb_consensus_consensus_types_proto_rawDescGZIP(), []int{0}
}

type OpIdType int32

const (
	OpIdType_UNKNOWN_OPID_TYPE OpIdType = 0
	OpIdType_RECEIVED_OPID     OpIdType = 1
	OpIdType_COMMITTED_OPID    OpIdType = 2
)

// Enum value maps for OpIdType.
var (
	OpIdType_name = map[int32]string{
		0: "UNKNOWN_OPID_TYPE",
		1: "RECEIVED_OPID",
		2: "COMMITTED_OPID",
	}
	OpIdType_value = map[string]int32{
		"UNKNOWN_OPID_TYPE": 0,
		"RECEIVED_OPID":     1,
		"COMMITTED_OPID":    2,
	}
)

func (x OpIdType) Enum() *OpIdType {
	p := new(OpIdType)
	*p = x
	return p
}

func (x OpIdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpIdType) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_consensus_consensus_types_proto_enumTypes[1].Descriptor()
}

func (OpIdType) Type() protoreflect.EnumType {
	return &file_yb_consensus_consensus_types_proto_enumTypes[1]
}

func (x OpIdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *OpIdType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = OpIdType(num)
	return nil
}

// Deprecated: Use OpIdType.Descriptor instead.
func (OpIdType) EnumDescriptor() ([]byte, []int) {
	return file_yb_consensus_consensus_types_proto_rawDescGZIP(), []int{1}
}

type LeaderLeaseStatus int32

const (
	LeaderLeaseStatus_HAS_LEASE                    LeaderLeaseStatus = 0
	LeaderLeaseStatus_OLD_LEADER_MAY_HAVE_LEASE    LeaderLeaseStatus = 1
	LeaderLeaseStatus_NO_MAJORITY_REPLICATED_LEASE LeaderLeaseStatus = 2
)

// Enum value maps for LeaderLeaseStatus.
var (
	LeaderLeaseStatus_name = map[int32]string{
		0: "HAS_LEASE",
		1: "OLD_LEADER_MAY_HAVE_LEASE",
		2: "NO_MAJORITY_REPLICATED_LEASE",
	}
	LeaderLeaseStatus_value = map[string]int32{
		"HAS_LEASE":                    0,
		"OLD_LEADER_MAY_HAVE_LEASE":    1,
		"NO_MAJORITY_REPLICATED_LEASE": 2,
	}
)

func (x LeaderLeaseStatus) Enum() *LeaderLeaseStatus {
	p := new(LeaderLeaseStatus)
	*p = x
	return p
}

func (x LeaderLeaseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeaderLeaseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_consensus_consensus_types_proto_enumTypes[2].Descriptor()
}

func (LeaderLeaseStatus) Type() protoreflect.EnumType {
	return &file_yb_consensus_consensus_types_proto_enumTypes[2]
}

func (x LeaderLeaseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LeaderLeaseStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LeaderLeaseStatus(num)
	return nil
}

// Deprecated: Use LeaderLeaseStatus.Descriptor instead.
func (LeaderLeaseStatus) EnumDescriptor() ([]byte, []int) {
	return file_yb_consensus_consensus_types_proto_rawDescGZIP(), []int{2}
}

// The types of operations that need a commit message, i.e. those that require
// at least one round of the consensus algorithm.
type OperationType int32

const (
	OperationType_UNKNOWN_OP                  OperationType = 0
	OperationType_NO_OP                       OperationType = 1
	OperationType_WRITE_OP                    OperationType = 3
	OperationType_CHANGE_METADATA_OP          OperationType = 4
	OperationType_CHANGE_CONFIG_OP            OperationType = 5
	OperationType_UPDATE_TRANSACTION_OP       OperationType = 6
	OperationType_SNAPSHOT_OP                 OperationType = 7
	OperationType_TRUNCATE_OP                 OperationType = 8
	OperationType_HISTORY_CUTOFF_OP           OperationType = 9
	OperationType_SPLIT_OP                    OperationType = 10
	OperationType_CHANGE_AUTO_FLAGS_CONFIG_OP OperationType = 11
	OperationType_CLONE_OP                    OperationType = 12
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0:  "UNKNOWN_OP",
		1:  "NO_OP",
		3:  "WRITE_OP",
		4:  "CHANGE_METADATA_OP",
		5:  "CHANGE_CONFIG_OP",
		6:  "UPDATE_TRANSACTION_OP",
		7:  "SNAPSHOT_OP",
		8:  "TRUNCATE_OP",
		9:  "HISTORY_CUTOFF_OP",
		10: "SPLIT_OP",
		11: "CHANGE_AUTO_FLAGS_CONFIG_OP",
		12: "CLONE_OP",
	}
	OperationType_value = map[string]int32{
		"UNKNOWN_OP":                  0,
		"NO_OP":                       1,
		"WRITE_OP":                    3,
		"CHANGE_METADATA_OP":          4,
		"CHANGE_CONFIG_OP":            5,
		"UPDATE_TRANSACTION_OP":       6,
		"SNAPSHOT_OP":                 7,
		"TRUNCATE_OP":                 8,
		"HISTORY_CUTOFF_OP":           9,
		"SPLIT_OP":                    10,
		"CHANGE_AUTO_FLAGS_CONFIG_OP": 11,
		"CLONE_OP":                    12,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_consensus_consensus_types_proto_enumTypes[3].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_yb_consensus_consensus_types_proto_enumTypes[3]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *OperationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = OperationType(num)
	return nil
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_yb_consensus_consensus_types_proto_rawDescGZIP(), []int{3}
}

// The codes for consensus responses. These are set in the status when
// some consensus internal error occurs and require special handling
// by the caller. A generic error code is purposefully absent since
// generic errors should use tserver.TabletServerErrorPB.
type ConsensusErrorPB_Code int32

const (
	ConsensusErrorPB_UNKNOWN ConsensusErrorPB_Code = 0
	// Invalid term.
	// Sent by peers in response to leader RPCs whenever the term
	// of one of the messages sent in a batch is lower than the
	// the term the peer is expecting.
	ConsensusErrorPB_INVALID_TERM ConsensusErrorPB_Code = 2
	// For leader election.
	// The last OpId logged by the candidate is older than the last OpId logged
	// by the local peer.
	ConsensusErrorPB_LAST_OPID_TOO_OLD ConsensusErrorPB_Code = 3
	// For leader election.
	// The local replica has already voted for another candidate in this term.
	ConsensusErrorPB_ALREADY_VOTED ConsensusErrorPB_Code = 4
	// The replica does not recognize the caller's request as coming from a
	// member of the configuration.
	ConsensusErrorPB_NOT_IN_QUORUM ConsensusErrorPB_Code = 5
	// The responder's last entry didn't match the caller's preceding entry.
	ConsensusErrorPB_PRECEDING_ENTRY_DIDNT_MATCH ConsensusErrorPB_Code = 6
	// The local replica is either a leader, or has heard from a valid leader
	// more recently than the election timeout, so believes the leader to be alive.
	ConsensusErrorPB_LEADER_IS_ALIVE ConsensusErrorPB_Code = 7
	// The local replica is in the middle of servicing either another vote
	// or an update from a valid leader.
	ConsensusErrorPB_CONSENSUS_BUSY ConsensusErrorPB_Code = 8
	// The local replica was unable to prepare a single transaction.
	ConsensusErrorPB_CANNOT_PREPARE ConsensusErrorPB_Code = 9
	// Split operation has been added to this Raft group log.
	ConsensusErrorPB_TABLET_SPLIT ConsensusErrorPB_Code = 10
)

// Enum value maps for ConsensusErrorPB_Code.
var (
	ConsensusErrorPB_Code_name = map[int32]string{
		0:  "UNKNOWN",
		2:  "INVALID_TERM",
		3:  "LAST_OPID_TOO_OLD",
		4:  "ALREADY_VOTED",
		5:  "NOT_IN_QUORUM",
		6:  "PRECEDING_ENTRY_DIDNT_MATCH",
		7:  "LEADER_IS_ALIVE",
		8:  "CONSENSUS_BUSY",
		9:  "CANNOT_PREPARE",
		10: "TABLET_SPLIT",
	}
	ConsensusErrorPB_Code_value = map[string]int32{
		"UNKNOWN":                     0,
		"INVALID_TERM":                2,
		"LAST_OPID_TOO_OLD":           3,
		"ALREADY_VOTED":               4,
		"NOT_IN_QUORUM":               5,
		"PRECEDING_ENTRY_DIDNT_MATCH": 6,
		"LEADER_IS_ALIVE":             7,
		"CONSENSUS_BUSY":              8,
		"CANNOT_PREPARE":              9,
		"TABLET_SPLIT":                10,
	}
)

func (x ConsensusErrorPB_Code) Enum() *ConsensusErrorPB_Code {
	p := new(ConsensusErrorPB_Code)
	*p = x
	return p
}

func (x ConsensusErrorPB_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConsensusErrorPB_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_consensus_consensus_types_proto_enumTypes[4].Descriptor()
}

func (ConsensusErrorPB_Code) Type() protoreflect.EnumType {
	return &file_yb_consensus_consensus_types_proto_enumTypes[4]
}

func (x ConsensusErrorPB_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ConsensusErrorPB_Code) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ConsensusErrorPB_Code(num)
	return nil
}

// Deprecated: Use ConsensusErrorPB_Code.Descriptor instead.
func (ConsensusErrorPB_Code) EnumDescriptor() ([]byte, []int) {
	return file_yb_consensus_consensus_types_proto_rawDescGZIP(), []int{0, 0}
}

// Consensus-specific errors use this protobuf
type ConsensusErrorPB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The error code.
	Code *ConsensusErrorPB_Code `protobuf:"varint,1,req,name=code,enum=yb.consensus.ConsensusErrorPB_Code" json:"code,omitempty"`
	// The Status object for the error. This will include a textual
	// message that may be more useful to present in log messages, etc,
	// though its error code is less specific.
	Status        *common.AppStatusPB `protobuf:"bytes,2,req,name=status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsensusErrorPB) Reset() {
	*x = ConsensusErrorPB{}
	mi := &file_yb_consensus_consensus_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsensusErrorPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusErrorPB) ProtoMessage() {}

func (x *ConsensusErrorPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_consensus_consensus_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusErrorPB.ProtoReflect.Descriptor instead.
func (*ConsensusErrorPB) Descriptor() ([]byte, []int) {
	return file_yb_consensus_consensus_types_proto_rawDescGZIP(), []int{0}
}

func (x *ConsensusErrorPB) GetCode() ConsensusErrorPB_Code {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ConsensusErrorPB_UNKNOWN
}

func (x *ConsensusErrorPB) GetStatus() *common.AppStatusPB {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_yb_consensus_consensus_types_proto protoreflect.FileDescriptor

var file_yb_consensus_consensus_types_proto_rawDesc = string([]byte{
	0x0a, 0x22, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x2f, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x79, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x1a, 0x1d, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x77, 0x69,
	0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xc9, 0x02, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x12, 0x37, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x50, 0x42, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x42,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x45, 0x52, 0x4d, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x4f, 0x50, 0x49, 0x44, 0x5f, 0x54, 0x4f,
	0x4f, 0x5f, 0x4f, 0x4c, 0x44, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x4c, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f,
	0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x51, 0x55, 0x4f, 0x52, 0x55, 0x4d, 0x10, 0x05, 0x12, 0x1f, 0x0a,
	0x1b, 0x50, 0x52, 0x45, 0x43, 0x45, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x44, 0x49, 0x44, 0x4e, 0x54, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x06, 0x12, 0x13,
	0x0a, 0x0f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x49, 0x56,
	0x45, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x53, 0x45, 0x4e, 0x53, 0x55, 0x53,
	0x5f, 0x42, 0x55, 0x53, 0x59, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x41, 0x4e, 0x4e, 0x4f,
	0x54, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x41, 0x42, 0x4c, 0x45, 0x54, 0x5f, 0x53, 0x50, 0x4c, 0x49, 0x54, 0x10, 0x0a, 0x2a, 0x5a, 0x0a,
	0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x44, 0x44, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0x03, 0x2a, 0x48, 0x0a, 0x08, 0x4f, 0x70, 0x49,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x4f, 0x50, 0x49, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x5f, 0x4f, 0x50, 0x49, 0x44, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x5f, 0x4f, 0x50, 0x49,
	0x44, 0x10, 0x02, 0x2a, 0x63, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x53, 0x5f,
	0x4c, 0x45, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4f, 0x4c, 0x44, 0x5f, 0x4c,
	0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x59, 0x5f, 0x48, 0x41, 0x56, 0x45, 0x5f, 0x4c,
	0x45, 0x41, 0x53, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x4f, 0x5f, 0x4d, 0x41, 0x4a,
	0x4f, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x10, 0x02, 0x2a, 0xf7, 0x01, 0x0a, 0x0d, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x4f,
	0x5f, 0x4f, 0x50, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4f,
	0x50, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4d, 0x45,
	0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4f, 0x50, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x4f, 0x50, 0x10,
	0x05, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x4f, 0x50, 0x10, 0x07, 0x12, 0x0f, 0x0a,
	0x0b, 0x54, 0x52, 0x55, 0x4e, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x10, 0x08, 0x12, 0x15,
	0x0a, 0x11, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59, 0x5f, 0x43, 0x55, 0x54, 0x4f, 0x46, 0x46,
	0x5f, 0x4f, 0x50, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x50, 0x4c, 0x49, 0x54, 0x5f, 0x4f,
	0x50, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x41, 0x55,
	0x54, 0x4f, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x4f, 0x50, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4c, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x50,
	0x10, 0x0c, 0x42, 0x12, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e, 0x63, 0x6f, 0x6e,
	0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
})

var (
	file_yb_consensus_consensus_types_proto_rawDescOnce sync.Once
	file_yb_consensus_consensus_types_proto_rawDescData []byte
)

func file_yb_consensus_consensus_types_proto_rawDescGZIP() []byte {
	file_yb_consensus_consensus_types_proto_rawDescOnce.Do(func() {
		file_yb_consensus_consensus_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yb_consensus_consensus_types_proto_rawDesc), len(file_yb_consensus_consensus_types_proto_rawDesc)))
	})
	return file_yb_consensus_consensus_types_proto_rawDescData
}

var file_yb_consensus_consensus_types_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_yb_consensus_consensus_types_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_yb_consensus_consensus_types_proto_goTypes = []any{
	(ChangeConfigType)(0),      // 0: yb.consensus.ChangeConfigType
	(OpIdType)(0),              // 1: yb.consensus.OpIdType
	(LeaderLeaseStatus)(0),     // 2: yb.consensus.LeaderLeaseStatus
	(OperationType)(0),         // 3: yb.consensus.OperationType
	(ConsensusErrorPB_Code)(0), // 4: yb.consensus.ConsensusErrorPB.Code
	(*ConsensusErrorPB)(nil),   // 5: yb.consensus.ConsensusErrorPB
	(*common.AppStatusPB)(nil), // 6: yb.AppStatusPB
}
var file_yb_consensus_consensus_types_proto_depIdxs = []int32{
	4, // 0: yb.consensus.ConsensusErrorPB.code:type_name -> yb.consensus.ConsensusErrorPB.Code
	6, // 1: yb.consensus.ConsensusErrorPB.status:type_name -> yb.AppStatusPB
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_yb_consensus_consensus_types_proto_init() }
func file_yb_consensus_consensus_types_proto_init() {
	if File_yb_consensus_consensus_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yb_consensus_consensus_types_proto_rawDesc), len(file_yb_consensus_consensus_types_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yb_consensus_consensus_types_proto_goTypes,
		DependencyIndexes: file_yb_consensus_consensus_types_proto_depIdxs,
		EnumInfos:         file_yb_consensus_consensus_types_proto_enumTypes,
		MessageInfos:      file_yb_consensus_consensus_types_proto_msgTypes,
	}.Build()
	File_yb_consensus_consensus_types_proto = out.File
	file_yb_consensus_consensus_types_proto_goTypes = nil
	file_yb_consensus_consensus_types_proto_depIdxs = nil
}
