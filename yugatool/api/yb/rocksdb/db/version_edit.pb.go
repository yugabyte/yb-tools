//
// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.
//
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: yb/rocksdb/db/version_edit.proto

package db

import (
	any1 "github.com/golang/protobuf/ptypes/any"
	common "github.com/yugabyte/yb-tools/yugatool/api/yb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeletedFilePB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         *uint32                `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	FileNumber    *uint64                `protobuf:"varint,2,opt,name=file_number,json=fileNumber" json:"file_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletedFilePB) Reset() {
	*x = DeletedFilePB{}
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletedFilePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedFilePB) ProtoMessage() {}

func (x *DeletedFilePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedFilePB.ProtoReflect.Descriptor instead.
func (*DeletedFilePB) Descriptor() ([]byte, []int) {
	return file_yb_rocksdb_db_version_edit_proto_rawDescGZIP(), []int{0}
}

func (x *DeletedFilePB) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *DeletedFilePB) GetFileNumber() uint64 {
	if x != nil && x.FileNumber != nil {
		return *x.FileNumber
	}
	return 0
}

type UserBoundaryValuePB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When we merge boundary values from different sources tag is used to find corresponding values.
	// After that we compare those values and preserve smallest/largest of them.
	Tag           *uint32 `protobuf:"varint,1,opt,name=tag" json:"tag,omitempty"`
	Data          []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserBoundaryValuePB) Reset() {
	*x = UserBoundaryValuePB{}
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBoundaryValuePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBoundaryValuePB) ProtoMessage() {}

func (x *UserBoundaryValuePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBoundaryValuePB.ProtoReflect.Descriptor instead.
func (*UserBoundaryValuePB) Descriptor() ([]byte, []int) {
	return file_yb_rocksdb_db_version_edit_proto_rawDescGZIP(), []int{1}
}

func (x *UserBoundaryValuePB) GetTag() uint32 {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return 0
}

func (x *UserBoundaryValuePB) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BoundaryValuesPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           []byte                 `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Seqno         *uint64                `protobuf:"varint,2,opt,name=seqno" json:"seqno,omitempty"`
	UserFrontier  *any1.Any              `protobuf:"bytes,4,opt,name=user_frontier,json=userFrontier" json:"user_frontier,omitempty"`
	UserValues    []*UserBoundaryValuePB `protobuf:"bytes,3,rep,name=user_values,json=userValues" json:"user_values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BoundaryValuesPB) Reset() {
	*x = BoundaryValuesPB{}
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BoundaryValuesPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundaryValuesPB) ProtoMessage() {}

func (x *BoundaryValuesPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundaryValuesPB.ProtoReflect.Descriptor instead.
func (*BoundaryValuesPB) Descriptor() ([]byte, []int) {
	return file_yb_rocksdb_db_version_edit_proto_rawDescGZIP(), []int{2}
}

func (x *BoundaryValuesPB) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *BoundaryValuesPB) GetSeqno() uint64 {
	if x != nil && x.Seqno != nil {
		return *x.Seqno
	}
	return 0
}

func (x *BoundaryValuesPB) GetUserFrontier() *any1.Any {
	if x != nil {
		return x.UserFrontier
	}
	return nil
}

func (x *BoundaryValuesPB) GetUserValues() []*UserBoundaryValuePB {
	if x != nil {
		return x.UserValues
	}
	return nil
}

type NewFilePB struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Level               *uint32                `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Number              *uint64                `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	TotalFileSize       *uint64                `protobuf:"varint,3,opt,name=total_file_size,json=totalFileSize" json:"total_file_size,omitempty"`
	BaseFileSize        *uint64                `protobuf:"varint,4,opt,name=base_file_size,json=baseFileSize" json:"base_file_size,omitempty"`
	Smallest            *BoundaryValuesPB      `protobuf:"bytes,5,opt,name=smallest" json:"smallest,omitempty"`
	Largest             *BoundaryValuesPB      `protobuf:"bytes,6,opt,name=largest" json:"largest,omitempty"`
	PathId              *uint32                `protobuf:"varint,7,opt,name=path_id,json=pathId" json:"path_id,omitempty"`
	MarkedForCompaction *bool                  `protobuf:"varint,8,opt,name=marked_for_compaction,json=markedForCompaction" json:"marked_for_compaction,omitempty"`
	ObsoleteLastOpId    *common.OpIdPB         `protobuf:"bytes,9,opt,name=obsolete_last_op_id,json=obsoleteLastOpId" json:"obsolete_last_op_id,omitempty"`
	Imported            *bool                  `protobuf:"varint,10,opt,name=imported" json:"imported,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *NewFilePB) Reset() {
	*x = NewFilePB{}
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewFilePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFilePB) ProtoMessage() {}

func (x *NewFilePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFilePB.ProtoReflect.Descriptor instead.
func (*NewFilePB) Descriptor() ([]byte, []int) {
	return file_yb_rocksdb_db_version_edit_proto_rawDescGZIP(), []int{3}
}

func (x *NewFilePB) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *NewFilePB) GetNumber() uint64 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *NewFilePB) GetTotalFileSize() uint64 {
	if x != nil && x.TotalFileSize != nil {
		return *x.TotalFileSize
	}
	return 0
}

func (x *NewFilePB) GetBaseFileSize() uint64 {
	if x != nil && x.BaseFileSize != nil {
		return *x.BaseFileSize
	}
	return 0
}

func (x *NewFilePB) GetSmallest() *BoundaryValuesPB {
	if x != nil {
		return x.Smallest
	}
	return nil
}

func (x *NewFilePB) GetLargest() *BoundaryValuesPB {
	if x != nil {
		return x.Largest
	}
	return nil
}

func (x *NewFilePB) GetPathId() uint32 {
	if x != nil && x.PathId != nil {
		return *x.PathId
	}
	return 0
}

func (x *NewFilePB) GetMarkedForCompaction() bool {
	if x != nil && x.MarkedForCompaction != nil {
		return *x.MarkedForCompaction
	}
	return false
}

func (x *NewFilePB) GetObsoleteLastOpId() *common.OpIdPB {
	if x != nil {
		return x.ObsoleteLastOpId
	}
	return nil
}

func (x *NewFilePB) GetImported() bool {
	if x != nil && x.Imported != nil {
		return *x.Imported
	}
	return false
}

type VersionEditPB struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Comparator      *string                `protobuf:"bytes,1,opt,name=comparator" json:"comparator,omitempty"`
	LogNumber       *uint64                `protobuf:"varint,2,opt,name=log_number,json=logNumber" json:"log_number,omitempty"`
	PrevLogNumber   *uint64                `protobuf:"varint,3,opt,name=prev_log_number,json=prevLogNumber" json:"prev_log_number,omitempty"`
	NextFileNumber  *uint64                `protobuf:"varint,4,opt,name=next_file_number,json=nextFileNumber" json:"next_file_number,omitempty"`
	MaxColumnFamily *uint32                `protobuf:"varint,5,opt,name=max_column_family,json=maxColumnFamily" json:"max_column_family,omitempty"`
	LastSequence    *uint64                `protobuf:"varint,6,opt,name=last_sequence,json=lastSequence" json:"last_sequence,omitempty"`
	DeletedFiles    []*DeletedFilePB       `protobuf:"bytes,7,rep,name=deleted_files,json=deletedFiles" json:"deleted_files,omitempty"`
	NewFiles        []*NewFilePB           `protobuf:"bytes,8,rep,name=new_files,json=newFiles" json:"new_files,omitempty"`
	// Each version edit record should have column_family_id set
	// If it's not set, it is default (0)
	ColumnFamily *uint32 `protobuf:"varint,9,opt,name=column_family,json=columnFamily" json:"column_family,omitempty"`
	// a version edit can be either column_family add or
	// column_family drop. If it's column family add,
	// it includes column family name.
	ColumnFamilyName   *string        `protobuf:"bytes,10,opt,name=column_family_name,json=columnFamilyName" json:"column_family_name,omitempty"`
	IsColumnFamilyDrop *bool          `protobuf:"varint,11,opt,name=is_column_family_drop,json=isColumnFamilyDrop" json:"is_column_family_drop,omitempty"`
	ObsoleteLastOpId   *common.OpIdPB `protobuf:"bytes,12,opt,name=obsolete_last_op_id,json=obsoleteLastOpId" json:"obsolete_last_op_id,omitempty"`
	FlushedFrontier    *any1.Any      `protobuf:"bytes,13,opt,name=flushed_frontier,json=flushedFrontier" json:"flushed_frontier,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *VersionEditPB) Reset() {
	*x = VersionEditPB{}
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionEditPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionEditPB) ProtoMessage() {}

func (x *VersionEditPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rocksdb_db_version_edit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionEditPB.ProtoReflect.Descriptor instead.
func (*VersionEditPB) Descriptor() ([]byte, []int) {
	return file_yb_rocksdb_db_version_edit_proto_rawDescGZIP(), []int{4}
}

func (x *VersionEditPB) GetComparator() string {
	if x != nil && x.Comparator != nil {
		return *x.Comparator
	}
	return ""
}

func (x *VersionEditPB) GetLogNumber() uint64 {
	if x != nil && x.LogNumber != nil {
		return *x.LogNumber
	}
	return 0
}

func (x *VersionEditPB) GetPrevLogNumber() uint64 {
	if x != nil && x.PrevLogNumber != nil {
		return *x.PrevLogNumber
	}
	return 0
}

func (x *VersionEditPB) GetNextFileNumber() uint64 {
	if x != nil && x.NextFileNumber != nil {
		return *x.NextFileNumber
	}
	return 0
}

func (x *VersionEditPB) GetMaxColumnFamily() uint32 {
	if x != nil && x.MaxColumnFamily != nil {
		return *x.MaxColumnFamily
	}
	return 0
}

func (x *VersionEditPB) GetLastSequence() uint64 {
	if x != nil && x.LastSequence != nil {
		return *x.LastSequence
	}
	return 0
}

func (x *VersionEditPB) GetDeletedFiles() []*DeletedFilePB {
	if x != nil {
		return x.DeletedFiles
	}
	return nil
}

func (x *VersionEditPB) GetNewFiles() []*NewFilePB {
	if x != nil {
		return x.NewFiles
	}
	return nil
}

func (x *VersionEditPB) GetColumnFamily() uint32 {
	if x != nil && x.ColumnFamily != nil {
		return *x.ColumnFamily
	}
	return 0
}

func (x *VersionEditPB) GetColumnFamilyName() string {
	if x != nil && x.ColumnFamilyName != nil {
		return *x.ColumnFamilyName
	}
	return ""
}

func (x *VersionEditPB) GetIsColumnFamilyDrop() bool {
	if x != nil && x.IsColumnFamilyDrop != nil {
		return *x.IsColumnFamilyDrop
	}
	return false
}

func (x *VersionEditPB) GetObsoleteLastOpId() *common.OpIdPB {
	if x != nil {
		return x.ObsoleteLastOpId
	}
	return nil
}

func (x *VersionEditPB) GetFlushedFrontier() *any1.Any {
	if x != nil {
		return x.FlushedFrontier
	}
	return nil
}

var File_yb_rocksdb_db_version_edit_proto protoreflect.FileDescriptor

var file_yb_rocksdb_db_version_edit_proto_rawDesc = string([]byte{
	0x0a, 0x20, 0x79, 0x62, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x73, 0x64, 0x62, 0x2f, 0x64, 0x62, 0x2f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x72, 0x6f, 0x63, 0x6b, 0x73, 0x64, 0x62, 0x1a, 0x14, 0x79, 0x62, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x42, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x3b, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xb4, 0x01, 0x0a, 0x10, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x50, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x65, 0x71, 0x6e,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x71, 0x6e, 0x6f, 0x12, 0x39,
	0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x73, 0x64, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x42, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x97, 0x03, 0x0a, 0x09, 0x4e, 0x65, 0x77,
	0x46, 0x69, 0x6c, 0x65, 0x50, 0x42, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x73, 0x64, 0x62, 0x2e, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x50, 0x42, 0x52,
	0x08, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x6c, 0x61, 0x72,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x6f, 0x63,
	0x6b, 0x73, 0x64, 0x62, 0x2e, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x50, 0x42, 0x52, 0x07, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x70, 0x61, 0x74, 0x68, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x13, 0x6f,
	0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x79, 0x62, 0x2e, 0x4f, 0x70,
	0x49, 0x64, 0x50, 0x42, 0x52, 0x10, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61,
	0x73, 0x74, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x22, 0xe1, 0x04, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x64,
	0x69, 0x74, 0x50, 0x42, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x72,
	0x65, 0x76, 0x4c, 0x6f, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x72, 0x6f, 0x63, 0x6b, 0x73, 0x64, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x50, 0x42, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x73, 0x64, 0x62,
	0x2e, 0x4e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x42, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x66,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x5f, 0x64, 0x72, 0x6f, 0x70,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x39, 0x0a, 0x13, 0x6f, 0x62,
	0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x79, 0x62, 0x2e, 0x4f, 0x70, 0x49,
	0x64, 0x50, 0x42, 0x52, 0x10, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x73,
	0x74, 0x4f, 0x70, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x10, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x65, 0x64,
	0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x65, 0x64, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x69, 0x65, 0x72,
})

var (
	file_yb_rocksdb_db_version_edit_proto_rawDescOnce sync.Once
	file_yb_rocksdb_db_version_edit_proto_rawDescData []byte
)

func file_yb_rocksdb_db_version_edit_proto_rawDescGZIP() []byte {
	file_yb_rocksdb_db_version_edit_proto_rawDescOnce.Do(func() {
		file_yb_rocksdb_db_version_edit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yb_rocksdb_db_version_edit_proto_rawDesc), len(file_yb_rocksdb_db_version_edit_proto_rawDesc)))
	})
	return file_yb_rocksdb_db_version_edit_proto_rawDescData
}

var file_yb_rocksdb_db_version_edit_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_yb_rocksdb_db_version_edit_proto_goTypes = []any{
	(*DeletedFilePB)(nil),       // 0: rocksdb.DeletedFilePB
	(*UserBoundaryValuePB)(nil), // 1: rocksdb.UserBoundaryValuePB
	(*BoundaryValuesPB)(nil),    // 2: rocksdb.BoundaryValuesPB
	(*NewFilePB)(nil),           // 3: rocksdb.NewFilePB
	(*VersionEditPB)(nil),       // 4: rocksdb.VersionEditPB
	(*any1.Any)(nil),            // 5: google.protobuf.Any
	(*common.OpIdPB)(nil),       // 6: yb.OpIdPB
}
var file_yb_rocksdb_db_version_edit_proto_depIdxs = []int32{
	5, // 0: rocksdb.BoundaryValuesPB.user_frontier:type_name -> google.protobuf.Any
	1, // 1: rocksdb.BoundaryValuesPB.user_values:type_name -> rocksdb.UserBoundaryValuePB
	2, // 2: rocksdb.NewFilePB.smallest:type_name -> rocksdb.BoundaryValuesPB
	2, // 3: rocksdb.NewFilePB.largest:type_name -> rocksdb.BoundaryValuesPB
	6, // 4: rocksdb.NewFilePB.obsolete_last_op_id:type_name -> yb.OpIdPB
	0, // 5: rocksdb.VersionEditPB.deleted_files:type_name -> rocksdb.DeletedFilePB
	3, // 6: rocksdb.VersionEditPB.new_files:type_name -> rocksdb.NewFilePB
	6, // 7: rocksdb.VersionEditPB.obsolete_last_op_id:type_name -> yb.OpIdPB
	5, // 8: rocksdb.VersionEditPB.flushed_frontier:type_name -> google.protobuf.Any
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_yb_rocksdb_db_version_edit_proto_init() }
func file_yb_rocksdb_db_version_edit_proto_init() {
	if File_yb_rocksdb_db_version_edit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yb_rocksdb_db_version_edit_proto_rawDesc), len(file_yb_rocksdb_db_version_edit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yb_rocksdb_db_version_edit_proto_goTypes,
		DependencyIndexes: file_yb_rocksdb_db_version_edit_proto_depIdxs,
		MessageInfos:      file_yb_rocksdb_db_version_edit_proto_msgTypes,
	}.Build()
	File_yb_rocksdb_db_version_edit_proto = out.File
	file_yb_rocksdb_db_version_edit_proto_goTypes = nil
	file_yb_rocksdb_db_version_edit_proto_depIdxs = nil
}
