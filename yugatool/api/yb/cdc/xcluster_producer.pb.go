// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied. See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: yb/cdc/xcluster_producer.proto

package cdc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProducerRegistryPB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Map from producer cdc stream ids to whether replication is paused on that stream.
	// The paused_producer_stream_ids map is currently being used as a set so the second
	// value will always be set to true.
	PausedProducerStreamIds map[string]bool `protobuf:"bytes,1,rep,name=paused_producer_stream_ids,json=pausedProducerStreamIds,proto3" json:"paused_producer_stream_ids,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ProducerRegistryPB) Reset() {
	*x = ProducerRegistryPB{}
	mi := &file_yb_cdc_xcluster_producer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProducerRegistryPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducerRegistryPB) ProtoMessage() {}

func (x *ProducerRegistryPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_cdc_xcluster_producer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducerRegistryPB.ProtoReflect.Descriptor instead.
func (*ProducerRegistryPB) Descriptor() ([]byte, []int) {
	return file_yb_cdc_xcluster_producer_proto_rawDescGZIP(), []int{0}
}

func (x *ProducerRegistryPB) GetPausedProducerStreamIds() map[string]bool {
	if x != nil {
		return x.PausedProducerStreamIds
	}
	return nil
}

var File_yb_cdc_xcluster_producer_proto protoreflect.FileDescriptor

var file_yb_cdc_xcluster_producer_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x79, 0x62, 0x2f, 0x63, 0x64, 0x63, 0x2f, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x79, 0x62, 0x2e, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0xdb, 0x01,
	0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x50, 0x42, 0x12, 0x79, 0x0a, 0x1a, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x79, 0x62, 0x2e, 0x78, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x50, 0x42, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x17, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x73, 0x1a,
	0x4a, 0x0a, 0x1c, 0x50, 0x61, 0x75, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x6f,
	0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_yb_cdc_xcluster_producer_proto_rawDescOnce sync.Once
	file_yb_cdc_xcluster_producer_proto_rawDescData []byte
)

func file_yb_cdc_xcluster_producer_proto_rawDescGZIP() []byte {
	file_yb_cdc_xcluster_producer_proto_rawDescOnce.Do(func() {
		file_yb_cdc_xcluster_producer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yb_cdc_xcluster_producer_proto_rawDesc), len(file_yb_cdc_xcluster_producer_proto_rawDesc)))
	})
	return file_yb_cdc_xcluster_producer_proto_rawDescData
}

var file_yb_cdc_xcluster_producer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_yb_cdc_xcluster_producer_proto_goTypes = []any{
	(*ProducerRegistryPB)(nil), // 0: yb.xcluster.ProducerRegistryPB
	nil,                        // 1: yb.xcluster.ProducerRegistryPB.PausedProducerStreamIdsEntry
}
var file_yb_cdc_xcluster_producer_proto_depIdxs = []int32{
	1, // 0: yb.xcluster.ProducerRegistryPB.paused_producer_stream_ids:type_name -> yb.xcluster.ProducerRegistryPB.PausedProducerStreamIdsEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_yb_cdc_xcluster_producer_proto_init() }
func file_yb_cdc_xcluster_producer_proto_init() {
	if File_yb_cdc_xcluster_producer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yb_cdc_xcluster_producer_proto_rawDesc), len(file_yb_cdc_xcluster_producer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yb_cdc_xcluster_producer_proto_goTypes,
		DependencyIndexes: file_yb_cdc_xcluster_producer_proto_depIdxs,
		MessageInfos:      file_yb_cdc_xcluster_producer_proto_msgTypes,
	}.Build()
	File_yb_cdc_xcluster_producer_proto = out.File
	file_yb_cdc_xcluster_producer_proto_goTypes = nil
	file_yb_cdc_xcluster_producer_proto_depIdxs = nil
}
