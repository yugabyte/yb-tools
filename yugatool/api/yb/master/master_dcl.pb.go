// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: yb/master/master_dcl.proto

package master

import (
	common "github.com/yugabyte/yb-tools/yugatool/api/yb/common"
	_ "github.com/yugabyte/yb-tools/yugatool/api/yb/rpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRoleRequestPB struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Name       *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SaltedHash *string                `protobuf:"bytes,2,opt,name=salted_hash,json=saltedHash" json:"salted_hash,omitempty"`
	Login      *bool                  `protobuf:"varint,3,opt,name=login" json:"login,omitempty"`
	Superuser  *bool                  `protobuf:"varint,4,opt,name=superuser" json:"superuser,omitempty"`
	// Name of the role creating this role.
	CreatorRoleName *string `protobuf:"bytes,5,opt,name=creator_role_name,json=creatorRoleName" json:"creator_role_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateRoleRequestPB) Reset() {
	*x = CreateRoleRequestPB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequestPB) ProtoMessage() {}

func (x *CreateRoleRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequestPB.ProtoReflect.Descriptor instead.
func (*CreateRoleRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRoleRequestPB) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateRoleRequestPB) GetSaltedHash() string {
	if x != nil && x.SaltedHash != nil {
		return *x.SaltedHash
	}
	return ""
}

func (x *CreateRoleRequestPB) GetLogin() bool {
	if x != nil && x.Login != nil {
		return *x.Login
	}
	return false
}

func (x *CreateRoleRequestPB) GetSuperuser() bool {
	if x != nil && x.Superuser != nil {
		return *x.Superuser
	}
	return false
}

func (x *CreateRoleRequestPB) GetCreatorRoleName() string {
	if x != nil && x.CreatorRoleName != nil {
		return *x.CreatorRoleName
	}
	return ""
}

type CreateRoleResponsePB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The error, if an error occurred with this request.
	Error         *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoleResponsePB) Reset() {
	*x = CreateRoleResponsePB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResponsePB) ProtoMessage() {}

func (x *CreateRoleResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResponsePB.ProtoReflect.Descriptor instead.
func (*CreateRoleResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoleResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type AlterRoleRequestPB struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Name       *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SaltedHash *string                `protobuf:"bytes,2,opt,name=salted_hash,json=saltedHash" json:"salted_hash,omitempty"`
	Login      *bool                  `protobuf:"varint,3,opt,name=login" json:"login,omitempty"`
	Superuser  *bool                  `protobuf:"varint,4,opt,name=superuser" json:"superuser,omitempty"`
	// Name of the role trying to alter the role.
	CurrentRole   *string `protobuf:"bytes,5,opt,name=current_role,json=currentRole" json:"current_role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlterRoleRequestPB) Reset() {
	*x = AlterRoleRequestPB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterRoleRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterRoleRequestPB) ProtoMessage() {}

func (x *AlterRoleRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterRoleRequestPB.ProtoReflect.Descriptor instead.
func (*AlterRoleRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{2}
}

func (x *AlterRoleRequestPB) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AlterRoleRequestPB) GetSaltedHash() string {
	if x != nil && x.SaltedHash != nil {
		return *x.SaltedHash
	}
	return ""
}

func (x *AlterRoleRequestPB) GetLogin() bool {
	if x != nil && x.Login != nil {
		return *x.Login
	}
	return false
}

func (x *AlterRoleRequestPB) GetSuperuser() bool {
	if x != nil && x.Superuser != nil {
		return *x.Superuser
	}
	return false
}

func (x *AlterRoleRequestPB) GetCurrentRole() string {
	if x != nil && x.CurrentRole != nil {
		return *x.CurrentRole
	}
	return ""
}

type AlterRoleResponsePB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The error, if an error occurred with this request.
	Error         *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlterRoleResponsePB) Reset() {
	*x = AlterRoleResponsePB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlterRoleResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlterRoleResponsePB) ProtoMessage() {}

func (x *AlterRoleResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlterRoleResponsePB.ProtoReflect.Descriptor instead.
func (*AlterRoleResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{3}
}

func (x *AlterRoleResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteRoleRequestPB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Name of the role trying to drop the role.
	CurrentRole   *string `protobuf:"bytes,2,opt,name=current_role,json=currentRole" json:"current_role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleRequestPB) Reset() {
	*x = DeleteRoleRequestPB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequestPB) ProtoMessage() {}

func (x *DeleteRoleRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequestPB.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRoleRequestPB) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeleteRoleRequestPB) GetCurrentRole() string {
	if x != nil && x.CurrentRole != nil {
		return *x.CurrentRole
	}
	return ""
}

type DeleteRoleResponsePB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The error, if an error occurred with this request.
	Error         *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoleResponsePB) Reset() {
	*x = DeleteRoleResponsePB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoleResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleResponsePB) ProtoMessage() {}

func (x *DeleteRoleResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleResponsePB.ProtoReflect.Descriptor instead.
func (*DeleteRoleResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRoleResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type GrantRevokeRoleRequestPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GrantedRole   *string                `protobuf:"bytes,1,opt,name=granted_role,json=grantedRole" json:"granted_role,omitempty"`
	RecipientRole *string                `protobuf:"bytes,2,opt,name=recipient_role,json=recipientRole" json:"recipient_role,omitempty"`
	// true if this is a revoke request.
	Revoke        *bool `protobuf:"varint,3,opt,name=revoke,def=0" json:"revoke,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for GrantRevokeRoleRequestPB fields.
const (
	Default_GrantRevokeRoleRequestPB_Revoke = bool(false)
)

func (x *GrantRevokeRoleRequestPB) Reset() {
	*x = GrantRevokeRoleRequestPB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantRevokeRoleRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRevokeRoleRequestPB) ProtoMessage() {}

func (x *GrantRevokeRoleRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRevokeRoleRequestPB.ProtoReflect.Descriptor instead.
func (*GrantRevokeRoleRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{6}
}

func (x *GrantRevokeRoleRequestPB) GetGrantedRole() string {
	if x != nil && x.GrantedRole != nil {
		return *x.GrantedRole
	}
	return ""
}

func (x *GrantRevokeRoleRequestPB) GetRecipientRole() string {
	if x != nil && x.RecipientRole != nil {
		return *x.RecipientRole
	}
	return ""
}

func (x *GrantRevokeRoleRequestPB) GetRevoke() bool {
	if x != nil && x.Revoke != nil {
		return *x.Revoke
	}
	return Default_GrantRevokeRoleRequestPB_Revoke
}

type GrantRevokeRoleResponsePB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The error, if an error occurred with this request.
	Error         *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrantRevokeRoleResponsePB) Reset() {
	*x = GrantRevokeRoleResponsePB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantRevokeRoleResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRevokeRoleResponsePB) ProtoMessage() {}

func (x *GrantRevokeRoleResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRevokeRoleResponsePB.ProtoReflect.Descriptor instead.
func (*GrantRevokeRoleResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{7}
}

func (x *GrantRevokeRoleResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type GrantRevokePermissionRequestPB struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Permission        *common.PermissionType `protobuf:"varint,1,opt,name=permission,enum=yb.PermissionType" json:"permission,omitempty"`
	ResourceType      *common.ResourceType   `protobuf:"varint,2,opt,name=resource_type,json=resourceType,enum=yb.ResourceType" json:"resource_type,omitempty"`
	CanonicalResource *string                `protobuf:"bytes,3,opt,name=canonical_resource,json=canonicalResource" json:"canonical_resource,omitempty"`
	ResourceName      *string                `protobuf:"bytes,4,opt,name=resource_name,json=resourceName" json:"resource_name,omitempty"`
	Namespace         *NamespaceIdentifierPB `protobuf:"bytes,5,opt,name=namespace" json:"namespace,omitempty"`
	RoleName          *string                `protobuf:"bytes,6,opt,name=role_name,json=roleName" json:"role_name,omitempty"`
	// true if this is a revoke request.
	Revoke        *bool `protobuf:"varint,7,opt,name=revoke,def=0" json:"revoke,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for GrantRevokePermissionRequestPB fields.
const (
	Default_GrantRevokePermissionRequestPB_Revoke = bool(false)
)

func (x *GrantRevokePermissionRequestPB) Reset() {
	*x = GrantRevokePermissionRequestPB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantRevokePermissionRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRevokePermissionRequestPB) ProtoMessage() {}

func (x *GrantRevokePermissionRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRevokePermissionRequestPB.ProtoReflect.Descriptor instead.
func (*GrantRevokePermissionRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{8}
}

func (x *GrantRevokePermissionRequestPB) GetPermission() common.PermissionType {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return common.PermissionType(0)
}

func (x *GrantRevokePermissionRequestPB) GetResourceType() common.ResourceType {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return common.ResourceType(1)
}

func (x *GrantRevokePermissionRequestPB) GetCanonicalResource() string {
	if x != nil && x.CanonicalResource != nil {
		return *x.CanonicalResource
	}
	return ""
}

func (x *GrantRevokePermissionRequestPB) GetResourceName() string {
	if x != nil && x.ResourceName != nil {
		return *x.ResourceName
	}
	return ""
}

func (x *GrantRevokePermissionRequestPB) GetNamespace() *NamespaceIdentifierPB {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *GrantRevokePermissionRequestPB) GetRoleName() string {
	if x != nil && x.RoleName != nil {
		return *x.RoleName
	}
	return ""
}

func (x *GrantRevokePermissionRequestPB) GetRevoke() bool {
	if x != nil && x.Revoke != nil {
		return *x.Revoke
	}
	return Default_GrantRevokePermissionRequestPB_Revoke
}

type GrantRevokePermissionResponsePB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The error, if an error occurred with this request.
	Error         *MasterErrorPB `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrantRevokePermissionResponsePB) Reset() {
	*x = GrantRevokePermissionResponsePB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantRevokePermissionResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRevokePermissionResponsePB) ProtoMessage() {}

func (x *GrantRevokePermissionResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRevokePermissionResponsePB.ProtoReflect.Descriptor instead.
func (*GrantRevokePermissionResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{9}
}

func (x *GrantRevokePermissionResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetPermissionsRequestPB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Only get the permissions if the cache version in the master is greater than this version.
	IfVersionGreaterThan *uint64 `protobuf:"varint,1,opt,name=if_version_greater_than,json=ifVersionGreaterThan" json:"if_version_greater_than,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetPermissionsRequestPB) Reset() {
	*x = GetPermissionsRequestPB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionsRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsRequestPB) ProtoMessage() {}

func (x *GetPermissionsRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsRequestPB.ProtoReflect.Descriptor instead.
func (*GetPermissionsRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{10}
}

func (x *GetPermissionsRequestPB) GetIfVersionGreaterThan() uint64 {
	if x != nil && x.IfVersionGreaterThan != nil {
		return *x.IfVersionGreaterThan
	}
	return 0
}

type ResourcePermissionInfoPB struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CanonicalResource *string                `protobuf:"bytes,1,opt,name=canonical_resource,json=canonicalResource" json:"canonical_resource,omitempty"`
	// Bitmap representing the permissions.
	Permissions   *uint32 `protobuf:"varint,2,opt,name=permissions" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourcePermissionInfoPB) Reset() {
	*x = ResourcePermissionInfoPB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourcePermissionInfoPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePermissionInfoPB) ProtoMessage() {}

func (x *ResourcePermissionInfoPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePermissionInfoPB.ProtoReflect.Descriptor instead.
func (*ResourcePermissionInfoPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{11}
}

func (x *ResourcePermissionInfoPB) GetCanonicalResource() string {
	if x != nil && x.CanonicalResource != nil {
		return *x.CanonicalResource
	}
	return ""
}

func (x *ResourcePermissionInfoPB) GetPermissions() uint32 {
	if x != nil && x.Permissions != nil {
		return *x.Permissions
	}
	return 0
}

type RolePermissionInfoPB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Role  *string                `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	// Bitmap representing the permissions for 'ALL KEYSPACES' and 'ALL ROLES'.
	AllKeyspacesPermissions *uint32                     `protobuf:"varint,2,opt,name=all_keyspaces_permissions,json=allKeyspacesPermissions" json:"all_keyspaces_permissions,omitempty"`
	AllRolesPermissions     *uint32                     `protobuf:"varint,3,opt,name=all_roles_permissions,json=allRolesPermissions" json:"all_roles_permissions,omitempty"`
	ResourcePermissions     []*ResourcePermissionInfoPB `protobuf:"bytes,4,rep,name=resource_permissions,json=resourcePermissions" json:"resource_permissions,omitempty"`
	SaltedHash              *string                     `protobuf:"bytes,5,opt,name=salted_hash,json=saltedHash" json:"salted_hash,omitempty"`
	CanLogin                *bool                       `protobuf:"varint,6,opt,name=can_login,json=canLogin" json:"can_login,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RolePermissionInfoPB) Reset() {
	*x = RolePermissionInfoPB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolePermissionInfoPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePermissionInfoPB) ProtoMessage() {}

func (x *RolePermissionInfoPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePermissionInfoPB.ProtoReflect.Descriptor instead.
func (*RolePermissionInfoPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{12}
}

func (x *RolePermissionInfoPB) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *RolePermissionInfoPB) GetAllKeyspacesPermissions() uint32 {
	if x != nil && x.AllKeyspacesPermissions != nil {
		return *x.AllKeyspacesPermissions
	}
	return 0
}

func (x *RolePermissionInfoPB) GetAllRolesPermissions() uint32 {
	if x != nil && x.AllRolesPermissions != nil {
		return *x.AllRolesPermissions
	}
	return 0
}

func (x *RolePermissionInfoPB) GetResourcePermissions() []*ResourcePermissionInfoPB {
	if x != nil {
		return x.ResourcePermissions
	}
	return nil
}

func (x *RolePermissionInfoPB) GetSaltedHash() string {
	if x != nil && x.SaltedHash != nil {
		return *x.SaltedHash
	}
	return ""
}

func (x *RolePermissionInfoPB) GetCanLogin() bool {
	if x != nil && x.CanLogin != nil {
		return *x.CanLogin
	}
	return false
}

type GetPermissionsResponsePB struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	Version         *uint64                 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Error           *MasterErrorPB          `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	RolePermissions []*RolePermissionInfoPB `protobuf:"bytes,3,rep,name=role_permissions,json=rolePermissions" json:"role_permissions,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetPermissionsResponsePB) Reset() {
	*x = GetPermissionsResponsePB{}
	mi := &file_yb_master_master_dcl_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionsResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsResponsePB) ProtoMessage() {}

func (x *GetPermissionsResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_dcl_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsResponsePB.ProtoReflect.Descriptor instead.
func (*GetPermissionsResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_dcl_proto_rawDescGZIP(), []int{13}
}

func (x *GetPermissionsResponsePB) GetVersion() uint64 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *GetPermissionsResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetPermissionsResponsePB) GetRolePermissions() []*RolePermissionInfoPB {
	if x != nil {
		return x.RolePermissions
	}
	return nil
}

var File_yb_master_master_dcl_proto protoreflect.FileDescriptor

var file_yb_master_master_dcl_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x64, 0x63, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1c, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x79, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x42, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x74,
	0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa0,
	0x01, 0x0a, 0x12, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6c,
	0x74, 0x65, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x61, 0x6c, 0x74, 0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x22, 0x45, 0x0a, 0x13, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50,
	0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4c, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x46, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x83,
	0x01, 0x0a, 0x18, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x21, 0x0a, 0x0c, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xdb, 0x02, 0x0a, 0x1e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x79, 0x62, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x79, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2d, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x6e,
	0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x42, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x06, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x22,
	0x51, 0x0a, 0x1f, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x50, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x35, 0x0a,
	0x17, 0x69, 0x66, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x69, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x54, 0x68, 0x61, 0x6e, 0x22, 0x6b, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61,
	0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xb0, 0x02, 0x0a, 0x14, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x3a,
	0x0a, 0x19, 0x61, 0x6c, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x17, 0x61, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x6c,
	0x6c, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x61, 0x6c, 0x6c, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56,
	0x0a, 0x14, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x42, 0x52, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x74, 0x65, 0x64,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x61, 0x6c,
	0x74, 0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x22, 0xb0, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x10, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x52, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xbb, 0x04, 0x0a, 0x09, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x63, 0x6c, 0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x42, 0x12, 0x4a, 0x0a, 0x09, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x1d, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42,
	0x1a, 0x1e, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x4d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x1f,
	0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12,
	0x5c, 0x0a, 0x0f, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x24, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x6e, 0x0a,
	0x15, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x42, 0x1a, 0x2a, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x59, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x22, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x1a, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x1a, 0x1b, 0xda, 0xb5, 0x18, 0x17, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
})

var (
	file_yb_master_master_dcl_proto_rawDescOnce sync.Once
	file_yb_master_master_dcl_proto_rawDescData []byte
)

func file_yb_master_master_dcl_proto_rawDescGZIP() []byte {
	file_yb_master_master_dcl_proto_rawDescOnce.Do(func() {
		file_yb_master_master_dcl_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yb_master_master_dcl_proto_rawDesc), len(file_yb_master_master_dcl_proto_rawDesc)))
	})
	return file_yb_master_master_dcl_proto_rawDescData
}

var file_yb_master_master_dcl_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_yb_master_master_dcl_proto_goTypes = []any{
	(*CreateRoleRequestPB)(nil),             // 0: yb.master.CreateRoleRequestPB
	(*CreateRoleResponsePB)(nil),            // 1: yb.master.CreateRoleResponsePB
	(*AlterRoleRequestPB)(nil),              // 2: yb.master.AlterRoleRequestPB
	(*AlterRoleResponsePB)(nil),             // 3: yb.master.AlterRoleResponsePB
	(*DeleteRoleRequestPB)(nil),             // 4: yb.master.DeleteRoleRequestPB
	(*DeleteRoleResponsePB)(nil),            // 5: yb.master.DeleteRoleResponsePB
	(*GrantRevokeRoleRequestPB)(nil),        // 6: yb.master.GrantRevokeRoleRequestPB
	(*GrantRevokeRoleResponsePB)(nil),       // 7: yb.master.GrantRevokeRoleResponsePB
	(*GrantRevokePermissionRequestPB)(nil),  // 8: yb.master.GrantRevokePermissionRequestPB
	(*GrantRevokePermissionResponsePB)(nil), // 9: yb.master.GrantRevokePermissionResponsePB
	(*GetPermissionsRequestPB)(nil),         // 10: yb.master.GetPermissionsRequestPB
	(*ResourcePermissionInfoPB)(nil),        // 11: yb.master.ResourcePermissionInfoPB
	(*RolePermissionInfoPB)(nil),            // 12: yb.master.RolePermissionInfoPB
	(*GetPermissionsResponsePB)(nil),        // 13: yb.master.GetPermissionsResponsePB
	(*MasterErrorPB)(nil),                   // 14: yb.master.MasterErrorPB
	(common.PermissionType)(0),              // 15: yb.PermissionType
	(common.ResourceType)(0),                // 16: yb.ResourceType
	(*NamespaceIdentifierPB)(nil),           // 17: yb.master.NamespaceIdentifierPB
}
var file_yb_master_master_dcl_proto_depIdxs = []int32{
	14, // 0: yb.master.CreateRoleResponsePB.error:type_name -> yb.master.MasterErrorPB
	14, // 1: yb.master.AlterRoleResponsePB.error:type_name -> yb.master.MasterErrorPB
	14, // 2: yb.master.DeleteRoleResponsePB.error:type_name -> yb.master.MasterErrorPB
	14, // 3: yb.master.GrantRevokeRoleResponsePB.error:type_name -> yb.master.MasterErrorPB
	15, // 4: yb.master.GrantRevokePermissionRequestPB.permission:type_name -> yb.PermissionType
	16, // 5: yb.master.GrantRevokePermissionRequestPB.resource_type:type_name -> yb.ResourceType
	17, // 6: yb.master.GrantRevokePermissionRequestPB.namespace:type_name -> yb.master.NamespaceIdentifierPB
	14, // 7: yb.master.GrantRevokePermissionResponsePB.error:type_name -> yb.master.MasterErrorPB
	11, // 8: yb.master.RolePermissionInfoPB.resource_permissions:type_name -> yb.master.ResourcePermissionInfoPB
	14, // 9: yb.master.GetPermissionsResponsePB.error:type_name -> yb.master.MasterErrorPB
	12, // 10: yb.master.GetPermissionsResponsePB.role_permissions:type_name -> yb.master.RolePermissionInfoPB
	0,  // 11: yb.master.MasterDcl.CreateRole:input_type -> yb.master.CreateRoleRequestPB
	2,  // 12: yb.master.MasterDcl.AlterRole:input_type -> yb.master.AlterRoleRequestPB
	4,  // 13: yb.master.MasterDcl.DeleteRole:input_type -> yb.master.DeleteRoleRequestPB
	6,  // 14: yb.master.MasterDcl.GrantRevokeRole:input_type -> yb.master.GrantRevokeRoleRequestPB
	8,  // 15: yb.master.MasterDcl.GrantRevokePermission:input_type -> yb.master.GrantRevokePermissionRequestPB
	10, // 16: yb.master.MasterDcl.GetPermissions:input_type -> yb.master.GetPermissionsRequestPB
	1,  // 17: yb.master.MasterDcl.CreateRole:output_type -> yb.master.CreateRoleResponsePB
	3,  // 18: yb.master.MasterDcl.AlterRole:output_type -> yb.master.AlterRoleResponsePB
	5,  // 19: yb.master.MasterDcl.DeleteRole:output_type -> yb.master.DeleteRoleResponsePB
	7,  // 20: yb.master.MasterDcl.GrantRevokeRole:output_type -> yb.master.GrantRevokeRoleResponsePB
	9,  // 21: yb.master.MasterDcl.GrantRevokePermission:output_type -> yb.master.GrantRevokePermissionResponsePB
	13, // 22: yb.master.MasterDcl.GetPermissions:output_type -> yb.master.GetPermissionsResponsePB
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_yb_master_master_dcl_proto_init() }
func file_yb_master_master_dcl_proto_init() {
	if File_yb_master_master_dcl_proto != nil {
		return
	}
	file_yb_master_master_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yb_master_master_dcl_proto_rawDesc), len(file_yb_master_master_dcl_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yb_master_master_dcl_proto_goTypes,
		DependencyIndexes: file_yb_master_master_dcl_proto_depIdxs,
		MessageInfos:      file_yb_master_master_dcl_proto_msgTypes,
	}.Build()
	File_yb_master_master_dcl_proto = out.File
	file_yb_master_master_dcl_proto_goTypes = nil
	file_yb_master_master_dcl_proto_depIdxs = nil
}
