// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-ybrpc. DO NOT EDIT.

package master

import (
	"github.com/go-logr/logr"
	"github.com/yugabyte/yb-tools/protoc-gen-ybrpc/pkg/message"
)

// service: yb.master.MasterBackup
// service: MasterBackup
type MasterBackup interface {
	CreateSnapshot(request *CreateSnapshotRequestPB) (*CreateSnapshotResponsePB, error)
	ListSnapshots(request *ListSnapshotsRequestPB) (*ListSnapshotsResponsePB, error)
	ListSnapshotRestorations(request *ListSnapshotRestorationsRequestPB) (*ListSnapshotRestorationsResponsePB, error)
	RestoreSnapshot(request *RestoreSnapshotRequestPB) (*RestoreSnapshotResponsePB, error)
	DeleteSnapshot(request *DeleteSnapshotRequestPB) (*DeleteSnapshotResponsePB, error)
	AbortSnapshotRestore(request *AbortSnapshotRestoreRequestPB) (*AbortSnapshotRestoreResponsePB, error)
	ImportSnapshotMeta(request *ImportSnapshotMetaRequestPB) (*ImportSnapshotMetaResponsePB, error)
	CreateSnapshotSchedule(request *CreateSnapshotScheduleRequestPB) (*CreateSnapshotScheduleResponsePB, error)
	ListSnapshotSchedules(request *ListSnapshotSchedulesRequestPB) (*ListSnapshotSchedulesResponsePB, error)
	DeleteSnapshotSchedule(request *DeleteSnapshotScheduleRequestPB) (*DeleteSnapshotScheduleResponsePB, error)
	EditSnapshotSchedule(request *EditSnapshotScheduleRequestPB) (*EditSnapshotScheduleResponsePB, error)
	RestoreSnapshotSchedule(request *RestoreSnapshotScheduleRequestPB) (*RestoreSnapshotScheduleResponsePB, error)
	CloneNamespace(request *CloneNamespaceRequestPB) (*CloneNamespaceResponsePB, error)
	ListClones(request *ListClonesRequestPB) (*ListClonesResponsePB, error)
}

type MasterBackupImpl struct {
	Log       logr.Logger
	Messenger message.Messenger
}

// Client->Master RPCs

func (s *MasterBackupImpl) CreateSnapshot(request *CreateSnapshotRequestPB) (*CreateSnapshotResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "CreateSnapshot", "request", request)
	response := &CreateSnapshotResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "CreateSnapshot", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "CreateSnapshot", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) ListSnapshots(request *ListSnapshotsRequestPB) (*ListSnapshotsResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "ListSnapshots", "request", request)
	response := &ListSnapshotsResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "ListSnapshots", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "ListSnapshots", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) ListSnapshotRestorations(request *ListSnapshotRestorationsRequestPB) (*ListSnapshotRestorationsResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "ListSnapshotRestorations", "request", request)
	response := &ListSnapshotRestorationsResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "ListSnapshotRestorations", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "ListSnapshotRestorations", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) RestoreSnapshot(request *RestoreSnapshotRequestPB) (*RestoreSnapshotResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "RestoreSnapshot", "request", request)
	response := &RestoreSnapshotResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "RestoreSnapshot", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "RestoreSnapshot", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) DeleteSnapshot(request *DeleteSnapshotRequestPB) (*DeleteSnapshotResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "DeleteSnapshot", "request", request)
	response := &DeleteSnapshotResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "DeleteSnapshot", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "DeleteSnapshot", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) AbortSnapshotRestore(request *AbortSnapshotRestoreRequestPB) (*AbortSnapshotRestoreResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "AbortSnapshotRestore", "request", request)
	response := &AbortSnapshotRestoreResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "AbortSnapshotRestore", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "AbortSnapshotRestore", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) ImportSnapshotMeta(request *ImportSnapshotMetaRequestPB) (*ImportSnapshotMetaResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "ImportSnapshotMeta", "request", request)
	response := &ImportSnapshotMetaResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "ImportSnapshotMeta", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "ImportSnapshotMeta", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) CreateSnapshotSchedule(request *CreateSnapshotScheduleRequestPB) (*CreateSnapshotScheduleResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "CreateSnapshotSchedule", "request", request)
	response := &CreateSnapshotScheduleResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "CreateSnapshotSchedule", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "CreateSnapshotSchedule", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) ListSnapshotSchedules(request *ListSnapshotSchedulesRequestPB) (*ListSnapshotSchedulesResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "ListSnapshotSchedules", "request", request)
	response := &ListSnapshotSchedulesResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "ListSnapshotSchedules", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "ListSnapshotSchedules", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) DeleteSnapshotSchedule(request *DeleteSnapshotScheduleRequestPB) (*DeleteSnapshotScheduleResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "DeleteSnapshotSchedule", "request", request)
	response := &DeleteSnapshotScheduleResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "DeleteSnapshotSchedule", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "DeleteSnapshotSchedule", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) EditSnapshotSchedule(request *EditSnapshotScheduleRequestPB) (*EditSnapshotScheduleResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "EditSnapshotSchedule", "request", request)
	response := &EditSnapshotScheduleResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "EditSnapshotSchedule", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "EditSnapshotSchedule", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) RestoreSnapshotSchedule(request *RestoreSnapshotScheduleRequestPB) (*RestoreSnapshotScheduleResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "RestoreSnapshotSchedule", "request", request)
	response := &RestoreSnapshotScheduleResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "RestoreSnapshotSchedule", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "RestoreSnapshotSchedule", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) CloneNamespace(request *CloneNamespaceRequestPB) (*CloneNamespaceResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "CloneNamespace", "request", request)
	response := &CloneNamespaceResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "CloneNamespace", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "CloneNamespace", "response", response)

	return response, nil
}

func (s *MasterBackupImpl) ListClones(request *ListClonesRequestPB) (*ListClonesResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.master.MasterBackup", "method", "ListClones", "request", request)
	response := &ListClonesResponsePB{}

	err := s.Messenger.SendMessage("yb.master.MasterBackup", "ListClones", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.master.MasterBackup", "method", "ListClones", "response", response)

	return response, nil
}
