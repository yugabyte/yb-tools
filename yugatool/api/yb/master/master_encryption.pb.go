// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: yb/master/master_encryption.proto

package master

import (
	encryption "github.com/yugabyte/yb-tools/yugatool/api/yb/encryption"
	_ "github.com/yugabyte/yb-tools/yugatool/api/yb/rpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChangeEncryptionInfoRequestPB struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	EncryptionEnabled *bool                  `protobuf:"varint,1,opt,name=encryption_enabled,json=encryptionEnabled" json:"encryption_enabled,omitempty"`
	KeyPath           *string                `protobuf:"bytes,2,opt,name=key_path,json=keyPath" json:"key_path,omitempty"`
	VersionId         *string                `protobuf:"bytes,3,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	InMemory          *bool                  `protobuf:"varint,4,opt,name=in_memory,json=inMemory" json:"in_memory,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ChangeEncryptionInfoRequestPB) Reset() {
	*x = ChangeEncryptionInfoRequestPB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeEncryptionInfoRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEncryptionInfoRequestPB) ProtoMessage() {}

func (x *ChangeEncryptionInfoRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEncryptionInfoRequestPB.ProtoReflect.Descriptor instead.
func (*ChangeEncryptionInfoRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{0}
}

func (x *ChangeEncryptionInfoRequestPB) GetEncryptionEnabled() bool {
	if x != nil && x.EncryptionEnabled != nil {
		return *x.EncryptionEnabled
	}
	return false
}

func (x *ChangeEncryptionInfoRequestPB) GetKeyPath() string {
	if x != nil && x.KeyPath != nil {
		return *x.KeyPath
	}
	return ""
}

func (x *ChangeEncryptionInfoRequestPB) GetVersionId() string {
	if x != nil && x.VersionId != nil {
		return *x.VersionId
	}
	return ""
}

func (x *ChangeEncryptionInfoRequestPB) GetInMemory() bool {
	if x != nil && x.InMemory != nil {
		return *x.InMemory
	}
	return false
}

type ChangeEncryptionInfoResponsePB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *MasterErrorPB         `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeEncryptionInfoResponsePB) Reset() {
	*x = ChangeEncryptionInfoResponsePB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeEncryptionInfoResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEncryptionInfoResponsePB) ProtoMessage() {}

func (x *ChangeEncryptionInfoResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEncryptionInfoResponsePB.ProtoReflect.Descriptor instead.
func (*ChangeEncryptionInfoResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{1}
}

func (x *ChangeEncryptionInfoResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type IsEncryptionEnabledRequestPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsEncryptionEnabledRequestPB) Reset() {
	*x = IsEncryptionEnabledRequestPB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsEncryptionEnabledRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEncryptionEnabledRequestPB) ProtoMessage() {}

func (x *IsEncryptionEnabledRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEncryptionEnabledRequestPB.ProtoReflect.Descriptor instead.
func (*IsEncryptionEnabledRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{2}
}

type IsEncryptionEnabledResponsePB struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	EncryptionEnabled *bool                  `protobuf:"varint,1,opt,name=encryption_enabled,json=encryptionEnabled" json:"encryption_enabled,omitempty"`
	KeyId             *string                `protobuf:"bytes,2,opt,name=key_id,json=keyId" json:"key_id,omitempty"`
	Error             *MasterErrorPB         `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *IsEncryptionEnabledResponsePB) Reset() {
	*x = IsEncryptionEnabledResponsePB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsEncryptionEnabledResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsEncryptionEnabledResponsePB) ProtoMessage() {}

func (x *IsEncryptionEnabledResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsEncryptionEnabledResponsePB.ProtoReflect.Descriptor instead.
func (*IsEncryptionEnabledResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{3}
}

func (x *IsEncryptionEnabledResponsePB) GetEncryptionEnabled() bool {
	if x != nil && x.EncryptionEnabled != nil {
		return *x.EncryptionEnabled
	}
	return false
}

func (x *IsEncryptionEnabledResponsePB) GetKeyId() string {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return ""
}

func (x *IsEncryptionEnabledResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type AddUniverseKeysRequestPB struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	UniverseKeys  *encryption.UniverseKeysPB `protobuf:"bytes,1,opt,name=universe_keys,json=universeKeys" json:"universe_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUniverseKeysRequestPB) Reset() {
	*x = AddUniverseKeysRequestPB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUniverseKeysRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUniverseKeysRequestPB) ProtoMessage() {}

func (x *AddUniverseKeysRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUniverseKeysRequestPB.ProtoReflect.Descriptor instead.
func (*AddUniverseKeysRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{4}
}

func (x *AddUniverseKeysRequestPB) GetUniverseKeys() *encryption.UniverseKeysPB {
	if x != nil {
		return x.UniverseKeys
	}
	return nil
}

type AddUniverseKeysResponsePB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Error         *MasterErrorPB         `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUniverseKeysResponsePB) Reset() {
	*x = AddUniverseKeysResponsePB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUniverseKeysResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUniverseKeysResponsePB) ProtoMessage() {}

func (x *AddUniverseKeysResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUniverseKeysResponsePB.ProtoReflect.Descriptor instead.
func (*AddUniverseKeysResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{5}
}

func (x *AddUniverseKeysResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetUniverseKeyRegistryRequestPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUniverseKeyRegistryRequestPB) Reset() {
	*x = GetUniverseKeyRegistryRequestPB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUniverseKeyRegistryRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUniverseKeyRegistryRequestPB) ProtoMessage() {}

func (x *GetUniverseKeyRegistryRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUniverseKeyRegistryRequestPB.ProtoReflect.Descriptor instead.
func (*GetUniverseKeyRegistryRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{6}
}

type GetUniverseKeyRegistryResponsePB struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Error         *MasterErrorPB             `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	UniverseKeys  *encryption.UniverseKeysPB `protobuf:"bytes,2,opt,name=universe_keys,json=universeKeys" json:"universe_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUniverseKeyRegistryResponsePB) Reset() {
	*x = GetUniverseKeyRegistryResponsePB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUniverseKeyRegistryResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUniverseKeyRegistryResponsePB) ProtoMessage() {}

func (x *GetUniverseKeyRegistryResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUniverseKeyRegistryResponsePB.ProtoReflect.Descriptor instead.
func (*GetUniverseKeyRegistryResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{7}
}

func (x *GetUniverseKeyRegistryResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetUniverseKeyRegistryResponsePB) GetUniverseKeys() *encryption.UniverseKeysPB {
	if x != nil {
		return x.UniverseKeys
	}
	return nil
}

type GetFullUniverseKeyRegistryRequestPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFullUniverseKeyRegistryRequestPB) Reset() {
	*x = GetFullUniverseKeyRegistryRequestPB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFullUniverseKeyRegistryRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullUniverseKeyRegistryRequestPB) ProtoMessage() {}

func (x *GetFullUniverseKeyRegistryRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullUniverseKeyRegistryRequestPB.ProtoReflect.Descriptor instead.
func (*GetFullUniverseKeyRegistryRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{8}
}

type GetFullUniverseKeyRegistryResponsePB struct {
	state               protoimpl.MessageState            `protogen:"open.v1"`
	Error               *MasterErrorPB                    `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	UniverseKeyRegistry *encryption.UniverseKeyRegistryPB `protobuf:"bytes,2,opt,name=universe_key_registry,json=universeKeyRegistry" json:"universe_key_registry,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetFullUniverseKeyRegistryResponsePB) Reset() {
	*x = GetFullUniverseKeyRegistryResponsePB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFullUniverseKeyRegistryResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullUniverseKeyRegistryResponsePB) ProtoMessage() {}

func (x *GetFullUniverseKeyRegistryResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullUniverseKeyRegistryResponsePB.ProtoReflect.Descriptor instead.
func (*GetFullUniverseKeyRegistryResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{9}
}

func (x *GetFullUniverseKeyRegistryResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetFullUniverseKeyRegistryResponsePB) GetUniverseKeyRegistry() *encryption.UniverseKeyRegistryPB {
	if x != nil {
		return x.UniverseKeyRegistry
	}
	return nil
}

type HasUniverseKeyInMemoryRequestPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VersionId     *string                `protobuf:"bytes,1,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasUniverseKeyInMemoryRequestPB) Reset() {
	*x = HasUniverseKeyInMemoryRequestPB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasUniverseKeyInMemoryRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasUniverseKeyInMemoryRequestPB) ProtoMessage() {}

func (x *HasUniverseKeyInMemoryRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasUniverseKeyInMemoryRequestPB.ProtoReflect.Descriptor instead.
func (*HasUniverseKeyInMemoryRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{10}
}

func (x *HasUniverseKeyInMemoryRequestPB) GetVersionId() string {
	if x != nil && x.VersionId != nil {
		return *x.VersionId
	}
	return ""
}

type HasUniverseKeyInMemoryResponsePB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HasKey        *bool                  `protobuf:"varint,1,opt,name=has_key,json=hasKey" json:"has_key,omitempty"`
	Error         *MasterErrorPB         `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasUniverseKeyInMemoryResponsePB) Reset() {
	*x = HasUniverseKeyInMemoryResponsePB{}
	mi := &file_yb_master_master_encryption_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasUniverseKeyInMemoryResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasUniverseKeyInMemoryResponsePB) ProtoMessage() {}

func (x *HasUniverseKeyInMemoryResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_master_master_encryption_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasUniverseKeyInMemoryResponsePB.ProtoReflect.Descriptor instead.
func (*HasUniverseKeyInMemoryResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_master_master_encryption_proto_rawDescGZIP(), []int{11}
}

func (x *HasUniverseKeyInMemoryResponsePB) GetHasKey() bool {
	if x != nil && x.HasKey != nil {
		return *x.HasKey
	}
	return false
}

func (x *HasUniverseKeyInMemoryResponsePB) GetError() *MasterErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_yb_master_master_encryption_proto protoreflect.FileDescriptor

var file_yb_master_master_encryption_proto_rawDesc = string([]byte{
	0x0a, 0x21, 0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1e,
	0x79, 0x62, 0x2f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x79, 0x62, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x79, 0x62,
	0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0x50, 0x0a, 0x1e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62,
	0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x1e, 0x0a, 0x1c,
	0x49, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x22, 0x95, 0x01, 0x0a,
	0x1d, 0x49, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2d,
	0x0a, 0x12, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x5e, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x55, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42,
	0x12, 0x42, 0x0a, 0x0d, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x79, 0x62, 0x2e, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x50, 0x42, 0x52, 0x0c, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x4b, 0x65, 0x79, 0x73, 0x22, 0x4b, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x55, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x22, 0x96, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x0d, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x79, 0x62, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x50, 0x42, 0x52,
	0x0c, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x25, 0x0a,
	0x23, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x22, 0xb0, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c,
	0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x2e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x58, 0x0a,
	0x15, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x79,
	0x62, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x50, 0x42, 0x52, 0x13, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22, 0x40, 0x0a, 0x1f, 0x48, 0x61, 0x73, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x20, 0x48, 0x61, 0x73,
	0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x17, 0x0a,
	0x07, 0x68, 0x61, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x68, 0x61, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x42, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xc9, 0x05, 0x0a, 0x10, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6b, 0x0a, 0x14, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x28, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x29, 0x2e,
	0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x68, 0x0a, 0x13, 0x49, 0x73, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x27, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x28, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x5c, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x23, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x24, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42,
	0x12, 0x71, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x79, 0x62, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2b, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x50, 0x42, 0x12, 0x7d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x55, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x12, 0x2e, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x42, 0x1a, 0x2f, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x12, 0x71, 0x0a, 0x16, 0x48, 0x61, 0x73, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x2a, 0x2e, 0x79,
	0x62, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x73, 0x55, 0x6e, 0x69, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x2b, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x73, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x4b, 0x65, 0x79, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x1a, 0x1b, 0xda, 0xb5, 0x18, 0x17, 0x79, 0x62, 0x2e, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72,
})

var (
	file_yb_master_master_encryption_proto_rawDescOnce sync.Once
	file_yb_master_master_encryption_proto_rawDescData []byte
)

func file_yb_master_master_encryption_proto_rawDescGZIP() []byte {
	file_yb_master_master_encryption_proto_rawDescOnce.Do(func() {
		file_yb_master_master_encryption_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yb_master_master_encryption_proto_rawDesc), len(file_yb_master_master_encryption_proto_rawDesc)))
	})
	return file_yb_master_master_encryption_proto_rawDescData
}

var file_yb_master_master_encryption_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_yb_master_master_encryption_proto_goTypes = []any{
	(*ChangeEncryptionInfoRequestPB)(nil),        // 0: yb.master.ChangeEncryptionInfoRequestPB
	(*ChangeEncryptionInfoResponsePB)(nil),       // 1: yb.master.ChangeEncryptionInfoResponsePB
	(*IsEncryptionEnabledRequestPB)(nil),         // 2: yb.master.IsEncryptionEnabledRequestPB
	(*IsEncryptionEnabledResponsePB)(nil),        // 3: yb.master.IsEncryptionEnabledResponsePB
	(*AddUniverseKeysRequestPB)(nil),             // 4: yb.master.AddUniverseKeysRequestPB
	(*AddUniverseKeysResponsePB)(nil),            // 5: yb.master.AddUniverseKeysResponsePB
	(*GetUniverseKeyRegistryRequestPB)(nil),      // 6: yb.master.GetUniverseKeyRegistryRequestPB
	(*GetUniverseKeyRegistryResponsePB)(nil),     // 7: yb.master.GetUniverseKeyRegistryResponsePB
	(*GetFullUniverseKeyRegistryRequestPB)(nil),  // 8: yb.master.GetFullUniverseKeyRegistryRequestPB
	(*GetFullUniverseKeyRegistryResponsePB)(nil), // 9: yb.master.GetFullUniverseKeyRegistryResponsePB
	(*HasUniverseKeyInMemoryRequestPB)(nil),      // 10: yb.master.HasUniverseKeyInMemoryRequestPB
	(*HasUniverseKeyInMemoryResponsePB)(nil),     // 11: yb.master.HasUniverseKeyInMemoryResponsePB
	(*MasterErrorPB)(nil),                        // 12: yb.master.MasterErrorPB
	(*encryption.UniverseKeysPB)(nil),            // 13: yb.encryption.UniverseKeysPB
	(*encryption.UniverseKeyRegistryPB)(nil),     // 14: yb.encryption.UniverseKeyRegistryPB
}
var file_yb_master_master_encryption_proto_depIdxs = []int32{
	12, // 0: yb.master.ChangeEncryptionInfoResponsePB.error:type_name -> yb.master.MasterErrorPB
	12, // 1: yb.master.IsEncryptionEnabledResponsePB.error:type_name -> yb.master.MasterErrorPB
	13, // 2: yb.master.AddUniverseKeysRequestPB.universe_keys:type_name -> yb.encryption.UniverseKeysPB
	12, // 3: yb.master.AddUniverseKeysResponsePB.error:type_name -> yb.master.MasterErrorPB
	12, // 4: yb.master.GetUniverseKeyRegistryResponsePB.error:type_name -> yb.master.MasterErrorPB
	13, // 5: yb.master.GetUniverseKeyRegistryResponsePB.universe_keys:type_name -> yb.encryption.UniverseKeysPB
	12, // 6: yb.master.GetFullUniverseKeyRegistryResponsePB.error:type_name -> yb.master.MasterErrorPB
	14, // 7: yb.master.GetFullUniverseKeyRegistryResponsePB.universe_key_registry:type_name -> yb.encryption.UniverseKeyRegistryPB
	12, // 8: yb.master.HasUniverseKeyInMemoryResponsePB.error:type_name -> yb.master.MasterErrorPB
	0,  // 9: yb.master.MasterEncryption.ChangeEncryptionInfo:input_type -> yb.master.ChangeEncryptionInfoRequestPB
	2,  // 10: yb.master.MasterEncryption.IsEncryptionEnabled:input_type -> yb.master.IsEncryptionEnabledRequestPB
	4,  // 11: yb.master.MasterEncryption.AddUniverseKeys:input_type -> yb.master.AddUniverseKeysRequestPB
	6,  // 12: yb.master.MasterEncryption.GetUniverseKeyRegistry:input_type -> yb.master.GetUniverseKeyRegistryRequestPB
	8,  // 13: yb.master.MasterEncryption.GetFullUniverseKeyRegistry:input_type -> yb.master.GetFullUniverseKeyRegistryRequestPB
	10, // 14: yb.master.MasterEncryption.HasUniverseKeyInMemory:input_type -> yb.master.HasUniverseKeyInMemoryRequestPB
	1,  // 15: yb.master.MasterEncryption.ChangeEncryptionInfo:output_type -> yb.master.ChangeEncryptionInfoResponsePB
	3,  // 16: yb.master.MasterEncryption.IsEncryptionEnabled:output_type -> yb.master.IsEncryptionEnabledResponsePB
	5,  // 17: yb.master.MasterEncryption.AddUniverseKeys:output_type -> yb.master.AddUniverseKeysResponsePB
	7,  // 18: yb.master.MasterEncryption.GetUniverseKeyRegistry:output_type -> yb.master.GetUniverseKeyRegistryResponsePB
	9,  // 19: yb.master.MasterEncryption.GetFullUniverseKeyRegistry:output_type -> yb.master.GetFullUniverseKeyRegistryResponsePB
	11, // 20: yb.master.MasterEncryption.HasUniverseKeyInMemory:output_type -> yb.master.HasUniverseKeyInMemoryResponsePB
	15, // [15:21] is the sub-list for method output_type
	9,  // [9:15] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_yb_master_master_encryption_proto_init() }
func file_yb_master_master_encryption_proto_init() {
	if File_yb_master_master_encryption_proto != nil {
		return
	}
	file_yb_master_master_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yb_master_master_encryption_proto_rawDesc), len(file_yb_master_master_encryption_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yb_master_master_encryption_proto_goTypes,
		DependencyIndexes: file_yb_master_master_encryption_proto_depIdxs,
		MessageInfos:      file_yb_master_master_encryption_proto_msgTypes,
	}.Build()
	File_yb_master_master_encryption_proto = out.File
	file_yb_master_master_encryption_proto_goTypes = nil
	file_yb_master_master_encryption_proto_depIdxs = nil
}
