// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// The following only applies to changes made to this file as part of YugaByte development.
//
// Portions Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.
//
// Protobuf used for introspection of RPC services (eg listing in-flight RPCs,
// reflection, etc)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: yb/rpc/rpc_introspection.proto

package rpc

import (
	common "github.com/yugabyte/yb-tools/yugatool/api/yb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RpcCallState int32

const (
	RpcCallState_READY             RpcCallState = 0
	RpcCallState_ON_OUTBOUND_QUEUE RpcCallState = 1
	RpcCallState_SENT              RpcCallState = 2
	RpcCallState_TIMED_OUT         RpcCallState = 3
	RpcCallState_FINISHED_ERROR    RpcCallState = 4
	RpcCallState_FINISHED_SUCCESS  RpcCallState = 5
)

// Enum value maps for RpcCallState.
var (
	RpcCallState_name = map[int32]string{
		0: "READY",
		1: "ON_OUTBOUND_QUEUE",
		2: "SENT",
		3: "TIMED_OUT",
		4: "FINISHED_ERROR",
		5: "FINISHED_SUCCESS",
	}
	RpcCallState_value = map[string]int32{
		"READY":             0,
		"ON_OUTBOUND_QUEUE": 1,
		"SENT":              2,
		"TIMED_OUT":         3,
		"FINISHED_ERROR":    4,
		"FINISHED_SUCCESS":  5,
	}
)

func (x RpcCallState) Enum() *RpcCallState {
	p := new(RpcCallState)
	*p = x
	return p
}

func (x RpcCallState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcCallState) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_rpc_rpc_introspection_proto_enumTypes[0].Descriptor()
}

func (RpcCallState) Type() protoreflect.EnumType {
	return &file_yb_rpc_rpc_introspection_proto_enumTypes[0]
}

func (x RpcCallState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RpcCallState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RpcCallState(num)
	return nil
}

// Deprecated: Use RpcCallState.Descriptor instead.
func (RpcCallState) EnumDescriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{0}
}

type RpcConnectionPB_StateType int32

const (
	RpcConnectionPB_UNKNOWN     RpcConnectionPB_StateType = 999
	RpcConnectionPB_NEGOTIATING RpcConnectionPB_StateType = 0 // Connection is still being negotiated.
	RpcConnectionPB_OPEN        RpcConnectionPB_StateType = 1 // Connection is active.
)

// Enum value maps for RpcConnectionPB_StateType.
var (
	RpcConnectionPB_StateType_name = map[int32]string{
		999: "UNKNOWN",
		0:   "NEGOTIATING",
		1:   "OPEN",
	}
	RpcConnectionPB_StateType_value = map[string]int32{
		"UNKNOWN":     999,
		"NEGOTIATING": 0,
		"OPEN":        1,
	}
)

func (x RpcConnectionPB_StateType) Enum() *RpcConnectionPB_StateType {
	p := new(RpcConnectionPB_StateType)
	*p = x
	return p
}

func (x RpcConnectionPB_StateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcConnectionPB_StateType) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_rpc_rpc_introspection_proto_enumTypes[1].Descriptor()
}

func (RpcConnectionPB_StateType) Type() protoreflect.EnumType {
	return &file_yb_rpc_rpc_introspection_proto_enumTypes[1]
}

func (x RpcConnectionPB_StateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RpcConnectionPB_StateType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RpcConnectionPB_StateType(num)
	return nil
}

// Deprecated: Use RpcConnectionPB_StateType.Descriptor instead.
func (RpcConnectionPB_StateType) EnumDescriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{7, 0}
}

type CQLStatementsDetailsPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SqlId         *string                `protobuf:"bytes,1,opt,name=sql_id,json=sqlId" json:"sql_id,omitempty"`
	SqlString     *string                `protobuf:"bytes,2,opt,name=sql_string,json=sqlString" json:"sql_string,omitempty"`
	Params        *string                `protobuf:"bytes,3,opt,name=params" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CQLStatementsDetailsPB) Reset() {
	*x = CQLStatementsDetailsPB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CQLStatementsDetailsPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CQLStatementsDetailsPB) ProtoMessage() {}

func (x *CQLStatementsDetailsPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CQLStatementsDetailsPB.ProtoReflect.Descriptor instead.
func (*CQLStatementsDetailsPB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{0}
}

func (x *CQLStatementsDetailsPB) GetSqlId() string {
	if x != nil && x.SqlId != nil {
		return *x.SqlId
	}
	return ""
}

func (x *CQLStatementsDetailsPB) GetSqlString() string {
	if x != nil && x.SqlString != nil {
		return *x.SqlString
	}
	return ""
}

func (x *CQLStatementsDetailsPB) GetParams() string {
	if x != nil && x.Params != nil {
		return *x.Params
	}
	return ""
}

type RedisStatementsDetailsPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RedisString   *string                `protobuf:"bytes,1,opt,name=redis_string,json=redisString" json:"redis_string,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisStatementsDetailsPB) Reset() {
	*x = RedisStatementsDetailsPB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisStatementsDetailsPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisStatementsDetailsPB) ProtoMessage() {}

func (x *RedisStatementsDetailsPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisStatementsDetailsPB.ProtoReflect.Descriptor instead.
func (*RedisStatementsDetailsPB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{1}
}

func (x *RedisStatementsDetailsPB) GetRedisString() string {
	if x != nil && x.RedisString != nil {
		return *x.RedisString
	}
	return ""
}

type CQLCallDetailsPB struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Type          *string                   `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	CallDetails   []*CQLStatementsDetailsPB `protobuf:"bytes,2,rep,name=call_details,json=callDetails" json:"call_details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CQLCallDetailsPB) Reset() {
	*x = CQLCallDetailsPB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CQLCallDetailsPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CQLCallDetailsPB) ProtoMessage() {}

func (x *CQLCallDetailsPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CQLCallDetailsPB.ProtoReflect.Descriptor instead.
func (*CQLCallDetailsPB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{2}
}

func (x *CQLCallDetailsPB) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *CQLCallDetailsPB) GetCallDetails() []*CQLStatementsDetailsPB {
	if x != nil {
		return x.CallDetails
	}
	return nil
}

type RedisCallDetailsPB struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	CallDetails   []*RedisStatementsDetailsPB `protobuf:"bytes,1,rep,name=call_details,json=callDetails" json:"call_details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedisCallDetailsPB) Reset() {
	*x = RedisCallDetailsPB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedisCallDetailsPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedisCallDetailsPB) ProtoMessage() {}

func (x *RedisCallDetailsPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedisCallDetailsPB.ProtoReflect.Descriptor instead.
func (*RedisCallDetailsPB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{3}
}

func (x *RedisCallDetailsPB) GetCallDetails() []*RedisStatementsDetailsPB {
	if x != nil {
		return x.CallDetails
	}
	return nil
}

type RpcCallInProgressPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *RequestHeader         `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	TraceBuffer   *string                `protobuf:"bytes,2,opt,name=trace_buffer,json=traceBuffer" json:"trace_buffer,omitempty"`
	ElapsedMillis *uint64                `protobuf:"varint,3,opt,name=elapsed_millis,json=elapsedMillis" json:"elapsed_millis,omitempty"`
	SendingBytes  *uint64                `protobuf:"varint,6,opt,name=sending_bytes,json=sendingBytes" json:"sending_bytes,omitempty"`
	State         *RpcCallState          `protobuf:"varint,7,opt,name=state,enum=yb.rpc.RpcCallState" json:"state,omitempty"`
	// Types that are valid to be assigned to CallDetails:
	//
	//	*RpcCallInProgressPB_CqlDetails
	//	*RpcCallInProgressPB_RedisDetails
	CallDetails   isRpcCallInProgressPB_CallDetails `protobuf_oneof:"call_details"`
	WaitState     *common.WaitStateInfoPB           `protobuf:"bytes,8,opt,name=wait_state,json=waitState" json:"wait_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcCallInProgressPB) Reset() {
	*x = RpcCallInProgressPB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcCallInProgressPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcCallInProgressPB) ProtoMessage() {}

func (x *RpcCallInProgressPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcCallInProgressPB.ProtoReflect.Descriptor instead.
func (*RpcCallInProgressPB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{4}
}

func (x *RpcCallInProgressPB) GetHeader() *RequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RpcCallInProgressPB) GetTraceBuffer() string {
	if x != nil && x.TraceBuffer != nil {
		return *x.TraceBuffer
	}
	return ""
}

func (x *RpcCallInProgressPB) GetElapsedMillis() uint64 {
	if x != nil && x.ElapsedMillis != nil {
		return *x.ElapsedMillis
	}
	return 0
}

func (x *RpcCallInProgressPB) GetSendingBytes() uint64 {
	if x != nil && x.SendingBytes != nil {
		return *x.SendingBytes
	}
	return 0
}

func (x *RpcCallInProgressPB) GetState() RpcCallState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return RpcCallState_READY
}

func (x *RpcCallInProgressPB) GetCallDetails() isRpcCallInProgressPB_CallDetails {
	if x != nil {
		return x.CallDetails
	}
	return nil
}

func (x *RpcCallInProgressPB) GetCqlDetails() *CQLCallDetailsPB {
	if x != nil {
		if x, ok := x.CallDetails.(*RpcCallInProgressPB_CqlDetails); ok {
			return x.CqlDetails
		}
	}
	return nil
}

func (x *RpcCallInProgressPB) GetRedisDetails() *RedisCallDetailsPB {
	if x != nil {
		if x, ok := x.CallDetails.(*RpcCallInProgressPB_RedisDetails); ok {
			return x.RedisDetails
		}
	}
	return nil
}

func (x *RpcCallInProgressPB) GetWaitState() *common.WaitStateInfoPB {
	if x != nil {
		return x.WaitState
	}
	return nil
}

type isRpcCallInProgressPB_CallDetails interface {
	isRpcCallInProgressPB_CallDetails()
}

type RpcCallInProgressPB_CqlDetails struct {
	CqlDetails *CQLCallDetailsPB `protobuf:"bytes,4,opt,name=cql_details,json=cqlDetails,oneof"`
}

type RpcCallInProgressPB_RedisDetails struct {
	RedisDetails *RedisCallDetailsPB `protobuf:"bytes,5,opt,name=redis_details,json=redisDetails,oneof"`
}

func (*RpcCallInProgressPB_CqlDetails) isRpcCallInProgressPB_CallDetails() {}

func (*RpcCallInProgressPB_RedisDetails) isRpcCallInProgressPB_CallDetails() {}

type CQLConnectionDetailsPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyspace      *string                `protobuf:"bytes,1,opt,name=keyspace" json:"keyspace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CQLConnectionDetailsPB) Reset() {
	*x = CQLConnectionDetailsPB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CQLConnectionDetailsPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CQLConnectionDetailsPB) ProtoMessage() {}

func (x *CQLConnectionDetailsPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CQLConnectionDetailsPB.ProtoReflect.Descriptor instead.
func (*CQLConnectionDetailsPB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{5}
}

func (x *CQLConnectionDetailsPB) GetKeyspace() string {
	if x != nil && x.Keyspace != nil {
		return *x.Keyspace
	}
	return ""
}

type RpcConnectionDetailsPB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ConnectionDetails:
	//
	//	*RpcConnectionDetailsPB_CqlConnectionDetails
	ConnectionDetails isRpcConnectionDetailsPB_ConnectionDetails `protobuf_oneof:"connection_details"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcConnectionDetailsPB) Reset() {
	*x = RpcConnectionDetailsPB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcConnectionDetailsPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcConnectionDetailsPB) ProtoMessage() {}

func (x *RpcConnectionDetailsPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcConnectionDetailsPB.ProtoReflect.Descriptor instead.
func (*RpcConnectionDetailsPB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{6}
}

func (x *RpcConnectionDetailsPB) GetConnectionDetails() isRpcConnectionDetailsPB_ConnectionDetails {
	if x != nil {
		return x.ConnectionDetails
	}
	return nil
}

func (x *RpcConnectionDetailsPB) GetCqlConnectionDetails() *CQLConnectionDetailsPB {
	if x != nil {
		if x, ok := x.ConnectionDetails.(*RpcConnectionDetailsPB_CqlConnectionDetails); ok {
			return x.CqlConnectionDetails
		}
	}
	return nil
}

type isRpcConnectionDetailsPB_ConnectionDetails interface {
	isRpcConnectionDetailsPB_ConnectionDetails()
}

type RpcConnectionDetailsPB_CqlConnectionDetails struct {
	CqlConnectionDetails *CQLConnectionDetailsPB `protobuf:"bytes,1,opt,name=cql_connection_details,json=cqlConnectionDetails,oneof"`
}

func (*RpcConnectionDetailsPB_CqlConnectionDetails) isRpcConnectionDetailsPB_ConnectionDetails() {}

type RpcConnectionPB struct {
	state              protoimpl.MessageState     `protogen:"open.v1"`
	RemoteIp           *string                    `protobuf:"bytes,1,req,name=remote_ip,json=remoteIp" json:"remote_ip,omitempty"`
	State              *RpcConnectionPB_StateType `protobuf:"varint,2,req,name=state,enum=yb.rpc.RpcConnectionPB_StateType" json:"state,omitempty"`
	ProcessedCallCount *uint64                    `protobuf:"varint,4,opt,name=processed_call_count,json=processedCallCount" json:"processed_call_count,omitempty"`
	SendingBytes       *uint64                    `protobuf:"varint,7,opt,name=sending_bytes,json=sendingBytes" json:"sending_bytes,omitempty"`
	ConnectionDetails  *RpcConnectionDetailsPB    `protobuf:"bytes,5,opt,name=connection_details,json=connectionDetails" json:"connection_details,omitempty"`
	CallsInFlight      []*RpcCallInProgressPB     `protobuf:"bytes,6,rep,name=calls_in_flight,json=callsInFlight" json:"calls_in_flight,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RpcConnectionPB) Reset() {
	*x = RpcConnectionPB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcConnectionPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcConnectionPB) ProtoMessage() {}

func (x *RpcConnectionPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcConnectionPB.ProtoReflect.Descriptor instead.
func (*RpcConnectionPB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{7}
}

func (x *RpcConnectionPB) GetRemoteIp() string {
	if x != nil && x.RemoteIp != nil {
		return *x.RemoteIp
	}
	return ""
}

func (x *RpcConnectionPB) GetState() RpcConnectionPB_StateType {
	if x != nil && x.State != nil {
		return *x.State
	}
	return RpcConnectionPB_UNKNOWN
}

func (x *RpcConnectionPB) GetProcessedCallCount() uint64 {
	if x != nil && x.ProcessedCallCount != nil {
		return *x.ProcessedCallCount
	}
	return 0
}

func (x *RpcConnectionPB) GetSendingBytes() uint64 {
	if x != nil && x.SendingBytes != nil {
		return *x.SendingBytes
	}
	return 0
}

func (x *RpcConnectionPB) GetConnectionDetails() *RpcConnectionDetailsPB {
	if x != nil {
		return x.ConnectionDetails
	}
	return nil
}

func (x *RpcConnectionPB) GetCallsInFlight() []*RpcCallInProgressPB {
	if x != nil {
		return x.CallsInFlight
	}
	return nil
}

type DumpRunningRpcsRequestPB struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	IncludeTraces               *bool                  `protobuf:"varint,1,opt,name=include_traces,json=includeTraces,def=0" json:"include_traces,omitempty"`
	DumpTimedOut                *bool                  `protobuf:"varint,2,opt,name=dump_timed_out,json=dumpTimedOut" json:"dump_timed_out,omitempty"`
	GetWaitState                *bool                  `protobuf:"varint,3,opt,name=get_wait_state,json=getWaitState" json:"get_wait_state,omitempty"`
	GetLocalCalls               *bool                  `protobuf:"varint,4,opt,name=get_local_calls,json=getLocalCalls" json:"get_local_calls,omitempty"`
	ExportWaitStateCodeAsString *bool                  `protobuf:"varint,5,opt,name=export_wait_state_code_as_string,json=exportWaitStateCodeAsString" json:"export_wait_state_code_as_string,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

// Default values for DumpRunningRpcsRequestPB fields.
const (
	Default_DumpRunningRpcsRequestPB_IncludeTraces = bool(false)
)

func (x *DumpRunningRpcsRequestPB) Reset() {
	*x = DumpRunningRpcsRequestPB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DumpRunningRpcsRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpRunningRpcsRequestPB) ProtoMessage() {}

func (x *DumpRunningRpcsRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpRunningRpcsRequestPB.ProtoReflect.Descriptor instead.
func (*DumpRunningRpcsRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{8}
}

func (x *DumpRunningRpcsRequestPB) GetIncludeTraces() bool {
	if x != nil && x.IncludeTraces != nil {
		return *x.IncludeTraces
	}
	return Default_DumpRunningRpcsRequestPB_IncludeTraces
}

func (x *DumpRunningRpcsRequestPB) GetDumpTimedOut() bool {
	if x != nil && x.DumpTimedOut != nil {
		return *x.DumpTimedOut
	}
	return false
}

func (x *DumpRunningRpcsRequestPB) GetGetWaitState() bool {
	if x != nil && x.GetWaitState != nil {
		return *x.GetWaitState
	}
	return false
}

func (x *DumpRunningRpcsRequestPB) GetGetLocalCalls() bool {
	if x != nil && x.GetLocalCalls != nil {
		return *x.GetLocalCalls
	}
	return false
}

func (x *DumpRunningRpcsRequestPB) GetExportWaitStateCodeAsString() bool {
	if x != nil && x.ExportWaitStateCodeAsString != nil {
		return *x.ExportWaitStateCodeAsString
	}
	return false
}

type DumpRunningRpcsResponsePB struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	InboundConnections  []*RpcConnectionPB     `protobuf:"bytes,1,rep,name=inbound_connections,json=inboundConnections" json:"inbound_connections,omitempty"`
	OutboundConnections []*RpcConnectionPB     `protobuf:"bytes,2,rep,name=outbound_connections,json=outboundConnections" json:"outbound_connections,omitempty"`
	LocalCalls          *RpcConnectionPB       `protobuf:"bytes,3,opt,name=local_calls,json=localCalls" json:"local_calls,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DumpRunningRpcsResponsePB) Reset() {
	*x = DumpRunningRpcsResponsePB{}
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DumpRunningRpcsResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpRunningRpcsResponsePB) ProtoMessage() {}

func (x *DumpRunningRpcsResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_rpc_rpc_introspection_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpRunningRpcsResponsePB.ProtoReflect.Descriptor instead.
func (*DumpRunningRpcsResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_rpc_rpc_introspection_proto_rawDescGZIP(), []int{9}
}

func (x *DumpRunningRpcsResponsePB) GetInboundConnections() []*RpcConnectionPB {
	if x != nil {
		return x.InboundConnections
	}
	return nil
}

func (x *DumpRunningRpcsResponsePB) GetOutboundConnections() []*RpcConnectionPB {
	if x != nil {
		return x.OutboundConnections
	}
	return nil
}

func (x *DumpRunningRpcsResponsePB) GetLocalCalls() *RpcConnectionPB {
	if x != nil {
		return x.LocalCalls
	}
	return nil
}

var File_yb_rpc_rpc_introspection_proto protoreflect.FileDescriptor

var file_yb_rpc_rpc_introspection_proto_rawDesc = string([]byte{
	0x0a, 0x1e, 0x79, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x79, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x79, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x16, 0x43, 0x51, 0x4c,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x50, 0x42, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x71, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x71, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x71,
	0x6c, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x71, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x3d, 0x0a, 0x18, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x42, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x22, 0x69, 0x0a, 0x10, 0x43, 0x51, 0x4c, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x50, 0x42, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x79, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x51, 0x4c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x42, 0x52, 0x0b,
	0x63, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x59, 0x0a, 0x12, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x50,
	0x42, 0x12, 0x43, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x62, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x42, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xa3, 0x03, 0x0a, 0x13, 0x52, 0x70, 0x63, 0x43, 0x61,
	0x6c, 0x6c, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50, 0x42, 0x12, 0x2d,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x79, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65,
	0x64, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x79, 0x62,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x70, 0x63, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x71, 0x6c, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x79, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x51, 0x4c, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x42, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x71, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x79,
	0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x42, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x77, 0x61, 0x69, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79,
	0x62, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50,
	0x42, 0x52, 0x09, 0x77, 0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x34, 0x0a, 0x16,
	0x43, 0x51, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x50, 0x42, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x16, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x42, 0x12, 0x56, 0x0a,
	0x16, 0x63, 0x71, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x79, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x51, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x42, 0x48, 0x00, 0x52,
	0x14, 0x63, 0x71, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x88, 0x03, 0x0a, 0x0f,
	0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x42, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x70, 0x12, 0x37, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x79, 0x62,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x42, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x43, 0x61,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x12,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x79, 0x62, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x50, 0x42, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x63,
	0x61, 0x6c, 0x6c, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x79, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x70,
	0x63, 0x43, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x42, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x49, 0x6e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x34, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0xe7, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x4e,
	0x45, 0x47, 0x4f, 0x54, 0x49, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x22, 0x83, 0x02, 0x0a, 0x18, 0x44, 0x75, 0x6d, 0x70, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x70, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x42, 0x12, 0x2c, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x64, 0x75, 0x6d, 0x70, 0x54,
	0x69, 0x6d, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x77,
	0x61, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x67, 0x65, 0x74, 0x57, 0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x45, 0x0a, 0x20, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x77, 0x61, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x61, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1b, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xeb, 0x01, 0x0a,
	0x19, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x70, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x48, 0x0a, 0x13, 0x69, 0x6e,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x62, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x42,
	0x52, 0x12, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x14, 0x6f, 0x75, 0x74, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x70, 0x63, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x42, 0x52, 0x13, 0x6f, 0x75, 0x74,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x38, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x79, 0x62, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x70, 0x63, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x42, 0x52, 0x0a,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x2a, 0x73, 0x0a, 0x0c, 0x52, 0x70,
	0x63, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x42,
	0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x53, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x44, 0x5f,
	0x4f, 0x55, 0x54, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45,
	0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x49, 0x4e,
	0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x42,
	0x08, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62,
})

var (
	file_yb_rpc_rpc_introspection_proto_rawDescOnce sync.Once
	file_yb_rpc_rpc_introspection_proto_rawDescData []byte
)

func file_yb_rpc_rpc_introspection_proto_rawDescGZIP() []byte {
	file_yb_rpc_rpc_introspection_proto_rawDescOnce.Do(func() {
		file_yb_rpc_rpc_introspection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yb_rpc_rpc_introspection_proto_rawDesc), len(file_yb_rpc_rpc_introspection_proto_rawDesc)))
	})
	return file_yb_rpc_rpc_introspection_proto_rawDescData
}

var file_yb_rpc_rpc_introspection_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_yb_rpc_rpc_introspection_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_yb_rpc_rpc_introspection_proto_goTypes = []any{
	(RpcCallState)(0),                 // 0: yb.rpc.RpcCallState
	(RpcConnectionPB_StateType)(0),    // 1: yb.rpc.RpcConnectionPB.StateType
	(*CQLStatementsDetailsPB)(nil),    // 2: yb.rpc.CQLStatementsDetailsPB
	(*RedisStatementsDetailsPB)(nil),  // 3: yb.rpc.RedisStatementsDetailsPB
	(*CQLCallDetailsPB)(nil),          // 4: yb.rpc.CQLCallDetailsPB
	(*RedisCallDetailsPB)(nil),        // 5: yb.rpc.RedisCallDetailsPB
	(*RpcCallInProgressPB)(nil),       // 6: yb.rpc.RpcCallInProgressPB
	(*CQLConnectionDetailsPB)(nil),    // 7: yb.rpc.CQLConnectionDetailsPB
	(*RpcConnectionDetailsPB)(nil),    // 8: yb.rpc.RpcConnectionDetailsPB
	(*RpcConnectionPB)(nil),           // 9: yb.rpc.RpcConnectionPB
	(*DumpRunningRpcsRequestPB)(nil),  // 10: yb.rpc.DumpRunningRpcsRequestPB
	(*DumpRunningRpcsResponsePB)(nil), // 11: yb.rpc.DumpRunningRpcsResponsePB
	(*RequestHeader)(nil),             // 12: yb.rpc.RequestHeader
	(*common.WaitStateInfoPB)(nil),    // 13: yb.WaitStateInfoPB
}
var file_yb_rpc_rpc_introspection_proto_depIdxs = []int32{
	2,  // 0: yb.rpc.CQLCallDetailsPB.call_details:type_name -> yb.rpc.CQLStatementsDetailsPB
	3,  // 1: yb.rpc.RedisCallDetailsPB.call_details:type_name -> yb.rpc.RedisStatementsDetailsPB
	12, // 2: yb.rpc.RpcCallInProgressPB.header:type_name -> yb.rpc.RequestHeader
	0,  // 3: yb.rpc.RpcCallInProgressPB.state:type_name -> yb.rpc.RpcCallState
	4,  // 4: yb.rpc.RpcCallInProgressPB.cql_details:type_name -> yb.rpc.CQLCallDetailsPB
	5,  // 5: yb.rpc.RpcCallInProgressPB.redis_details:type_name -> yb.rpc.RedisCallDetailsPB
	13, // 6: yb.rpc.RpcCallInProgressPB.wait_state:type_name -> yb.WaitStateInfoPB
	7,  // 7: yb.rpc.RpcConnectionDetailsPB.cql_connection_details:type_name -> yb.rpc.CQLConnectionDetailsPB
	1,  // 8: yb.rpc.RpcConnectionPB.state:type_name -> yb.rpc.RpcConnectionPB.StateType
	8,  // 9: yb.rpc.RpcConnectionPB.connection_details:type_name -> yb.rpc.RpcConnectionDetailsPB
	6,  // 10: yb.rpc.RpcConnectionPB.calls_in_flight:type_name -> yb.rpc.RpcCallInProgressPB
	9,  // 11: yb.rpc.DumpRunningRpcsResponsePB.inbound_connections:type_name -> yb.rpc.RpcConnectionPB
	9,  // 12: yb.rpc.DumpRunningRpcsResponsePB.outbound_connections:type_name -> yb.rpc.RpcConnectionPB
	9,  // 13: yb.rpc.DumpRunningRpcsResponsePB.local_calls:type_name -> yb.rpc.RpcConnectionPB
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_yb_rpc_rpc_introspection_proto_init() }
func file_yb_rpc_rpc_introspection_proto_init() {
	if File_yb_rpc_rpc_introspection_proto != nil {
		return
	}
	file_yb_rpc_rpc_header_proto_init()
	file_yb_rpc_rpc_introspection_proto_msgTypes[4].OneofWrappers = []any{
		(*RpcCallInProgressPB_CqlDetails)(nil),
		(*RpcCallInProgressPB_RedisDetails)(nil),
	}
	file_yb_rpc_rpc_introspection_proto_msgTypes[6].OneofWrappers = []any{
		(*RpcConnectionDetailsPB_CqlConnectionDetails)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yb_rpc_rpc_introspection_proto_rawDesc), len(file_yb_rpc_rpc_introspection_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yb_rpc_rpc_introspection_proto_goTypes,
		DependencyIndexes: file_yb_rpc_rpc_introspection_proto_depIdxs,
		EnumInfos:         file_yb_rpc_rpc_introspection_proto_enumTypes,
		MessageInfos:      file_yb_rpc_rpc_introspection_proto_msgTypes,
	}.Build()
	File_yb_rpc_rpc_introspection_proto = out.File
	file_yb_rpc_rpc_introspection_proto_goTypes = nil
	file_yb_rpc_rpc_introspection_proto_depIdxs = nil
}
