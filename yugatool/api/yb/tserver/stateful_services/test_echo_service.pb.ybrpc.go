// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not
// use this file except in compliance with the License.  You may obtain a copy
// of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
// License for the specific language governing permissions and limitations under
// the License.
//

// Code generated by protoc-gen-ybrpc. DO NOT EDIT.

package stateful_services

import (
	"github.com/go-logr/logr"
	"github.com/yugabyte/yb-tools/protoc-gen-ybrpc/pkg/message"
)

// service: yb.stateful_service.TestEchoService
// service: TestEchoService
type TestEchoService interface {
	GetEcho(request *GetEchoRequestPB) (*GetEchoResponsePB, error)
	GetEchoCount(request *GetEchoCountRequestPB) (*GetEchoCountResponsePB, error)
}

type TestEchoServiceImpl struct {
	Log       logr.Logger
	Messenger message.Messenger
}

func (s *TestEchoServiceImpl) GetEcho(request *GetEchoRequestPB) (*GetEchoResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.stateful_service.TestEchoService", "method", "GetEcho", "request", request)
	response := &GetEchoResponsePB{}

	err := s.Messenger.SendMessage("yb.stateful_service.TestEchoService", "GetEcho", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.stateful_service.TestEchoService", "method", "GetEcho", "response", response)

	return response, nil
}

func (s *TestEchoServiceImpl) GetEchoCount(request *GetEchoCountRequestPB) (*GetEchoCountResponsePB, error) {
	s.Log.V(1).Info("sending RPC request", "service", "yb.stateful_service.TestEchoService", "method", "GetEchoCount", "request", request)
	response := &GetEchoCountResponsePB{}

	err := s.Messenger.SendMessage("yb.stateful_service.TestEchoService", "GetEchoCount", request.ProtoReflect().Interface(), response.ProtoReflect().Interface())
	if err != nil {
		return nil, err
	}

	s.Log.V(1).Info("received RPC response", "service", "yb.stateful_service.TestEchoService", "method", "GetEchoCount", "response", response)

	return response, nil
}
