// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: yb/tserver/backup.proto

package tserver

import (
	any1 "github.com/golang/protobuf/ptypes/any"
	common "github.com/yugabyte/yb-tools/yugatool/api/yb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TabletSnapshotOpRequestPB_Operation int32

const (
	TabletSnapshotOpRequestPB_UNKNOWN             TabletSnapshotOpRequestPB_Operation = 0
	TabletSnapshotOpRequestPB_CREATE_ON_TABLET    TabletSnapshotOpRequestPB_Operation = 1 // Replicated at tserver, to create snapshot for a particular tablet.
	TabletSnapshotOpRequestPB_RESTORE_ON_TABLET   TabletSnapshotOpRequestPB_Operation = 2
	TabletSnapshotOpRequestPB_DELETE_ON_TABLET    TabletSnapshotOpRequestPB_Operation = 3
	TabletSnapshotOpRequestPB_CREATE_ON_MASTER    TabletSnapshotOpRequestPB_Operation = 4 // Replicated at master, while creating snapshot for multiple tablets.
	TabletSnapshotOpRequestPB_DELETE_ON_MASTER    TabletSnapshotOpRequestPB_Operation = 5
	TabletSnapshotOpRequestPB_RESTORE_SYS_CATALOG TabletSnapshotOpRequestPB_Operation = 6
	TabletSnapshotOpRequestPB_RESTORE_FINISHED    TabletSnapshotOpRequestPB_Operation = 7 // Whole restore operation is finished.
)

// Enum value maps for TabletSnapshotOpRequestPB_Operation.
var (
	TabletSnapshotOpRequestPB_Operation_name = map[int32]string{
		0: "UNKNOWN",
		1: "CREATE_ON_TABLET",
		2: "RESTORE_ON_TABLET",
		3: "DELETE_ON_TABLET",
		4: "CREATE_ON_MASTER",
		5: "DELETE_ON_MASTER",
		6: "RESTORE_SYS_CATALOG",
		7: "RESTORE_FINISHED",
	}
	TabletSnapshotOpRequestPB_Operation_value = map[string]int32{
		"UNKNOWN":             0,
		"CREATE_ON_TABLET":    1,
		"RESTORE_ON_TABLET":   2,
		"DELETE_ON_TABLET":    3,
		"CREATE_ON_MASTER":    4,
		"DELETE_ON_MASTER":    5,
		"RESTORE_SYS_CATALOG": 6,
		"RESTORE_FINISHED":    7,
	}
)

func (x TabletSnapshotOpRequestPB_Operation) Enum() *TabletSnapshotOpRequestPB_Operation {
	p := new(TabletSnapshotOpRequestPB_Operation)
	*p = x
	return p
}

func (x TabletSnapshotOpRequestPB_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TabletSnapshotOpRequestPB_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_yb_tserver_backup_proto_enumTypes[0].Descriptor()
}

func (TabletSnapshotOpRequestPB_Operation) Type() protoreflect.EnumType {
	return &file_yb_tserver_backup_proto_enumTypes[0]
}

func (x TabletSnapshotOpRequestPB_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TabletSnapshotOpRequestPB_Operation.Descriptor instead.
func (TabletSnapshotOpRequestPB_Operation) EnumDescriptor() ([]byte, []int) {
	return file_yb_tserver_backup_proto_rawDescGZIP(), []int{1, 0}
}

type TableMetadataPB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaVersion uint32                 `protobuf:"varint,1,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	Schema        *common.SchemaPB       `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	Indexes       []*common.IndexInfoPB  `protobuf:"bytes,3,rep,name=indexes,proto3" json:"indexes,omitempty"`
	TableId       []byte                 `protobuf:"bytes,4,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TableMetadataPB) Reset() {
	*x = TableMetadataPB{}
	mi := &file_yb_tserver_backup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableMetadataPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMetadataPB) ProtoMessage() {}

func (x *TableMetadataPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_backup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMetadataPB.ProtoReflect.Descriptor instead.
func (*TableMetadataPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_backup_proto_rawDescGZIP(), []int{0}
}

func (x *TableMetadataPB) GetSchemaVersion() uint32 {
	if x != nil {
		return x.SchemaVersion
	}
	return 0
}

func (x *TableMetadataPB) GetSchema() *common.SchemaPB {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *TableMetadataPB) GetIndexes() []*common.IndexInfoPB {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *TableMetadataPB) GetTableId() []byte {
	if x != nil {
		return x.TableId
	}
	return nil
}

type TabletSnapshotOpRequestPB struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of server this request is addressed to.
	DestUuid  []byte                              `protobuf:"bytes,1,opt,name=dest_uuid,json=destUuid,proto3" json:"dest_uuid,omitempty"`
	Operation TabletSnapshotOpRequestPB_Operation `protobuf:"varint,2,opt,name=operation,proto3,enum=yb.tserver.TabletSnapshotOpRequestPB_Operation" json:"operation,omitempty"`
	// In case of transactional id it is binary representation of snapshot UUID, i.e. 16 bytes.
	// Otherwise it is hexadecimal representation of snapshot UUID, i.e. 32 bytes.
	SnapshotId []byte `protobuf:"bytes,3,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	// Tablets to snapshot. In case of CREATE_ON_MASTER it contains UUIDs of all tablets of snapshot.
	// Otherwise it contains just one tablet.
	TabletId             [][]byte `protobuf:"bytes,4,rep,name=tablet_id,json=tabletId,proto3" json:"tablet_id,omitempty"`
	PropagatedHybridTime uint64   `protobuf:"fixed64,5,opt,name=propagated_hybrid_time,json=propagatedHybridTime,proto3" json:"propagated_hybrid_time,omitempty"`
	// Override the snapshot directory. Used in restoring sys catalog to avoid running initdb.
	SnapshotDirOverride   string `protobuf:"bytes,6,opt,name=snapshot_dir_override,json=snapshotDirOverride,proto3" json:"snapshot_dir_override,omitempty"`
	SnapshotHybridTime    uint64 `protobuf:"fixed64,7,opt,name=snapshot_hybrid_time,json=snapshotHybridTime,proto3" json:"snapshot_hybrid_time,omitempty"`
	RestorationHybridTime uint64 `protobuf:"fixed64,17,opt,name=restoration_hybrid_time,json=restorationHybridTime,proto3" json:"restoration_hybrid_time,omitempty"`
	// Extra data assigned for this snapshot request, so instance it could contain SysRowEntries.
	ExtraData                  *any1.Any             `protobuf:"bytes,8,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	Imported                   bool                  `protobuf:"varint,9,opt,name=imported,proto3" json:"imported,omitempty"`
	ScheduleId                 []byte                `protobuf:"bytes,10,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	RestorationId              []byte                `protobuf:"bytes,11,opt,name=restoration_id,json=restorationId,proto3" json:"restoration_id,omitempty"`
	SchemaVersion              uint32                `protobuf:"varint,12,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	Schema                     *common.SchemaPB      `protobuf:"bytes,13,opt,name=schema,proto3" json:"schema,omitempty"`
	Indexes                    []*common.IndexInfoPB `protobuf:"bytes,14,rep,name=indexes,proto3" json:"indexes,omitempty"`
	PreviousSnapshotHybridTime uint64                `protobuf:"fixed64,15,opt,name=previous_snapshot_hybrid_time,json=previousSnapshotHybridTime,proto3" json:"previous_snapshot_hybrid_time,omitempty"`
	Hide                       bool                  `protobuf:"varint,16,opt,name=hide,proto3" json:"hide,omitempty"`
	// This is the database oid that needs to be restored partially. Applicable
	// only for tablets of sequences_data table currently.
	DbOid int64 `protobuf:"varint,18,opt,name=db_oid,json=dbOid,proto3" json:"db_oid,omitempty"`
	// Metadata of all colocated tables in the case of RESTORE_ON_TABLET rpc.
	ColocatedTablesMetadata []*TableMetadataPB `protobuf:"bytes,19,rep,name=colocated_tables_metadata,json=colocatedTablesMetadata,proto3" json:"colocated_tables_metadata,omitempty"`
	// Number of hours the snapshot needs to be kept around
	// before it is deleted. Set only for CREATE_ON_MASTER for non-pitr use-cases.
	// Set to -1 to retain indefinitely until an explicit delete_snapshot.
	RetentionDurationHours int32 `protobuf:"varint,20,opt,name=retention_duration_hours,json=retentionDurationHours,proto3" json:"retention_duration_hours,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TabletSnapshotOpRequestPB) Reset() {
	*x = TabletSnapshotOpRequestPB{}
	mi := &file_yb_tserver_backup_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TabletSnapshotOpRequestPB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabletSnapshotOpRequestPB) ProtoMessage() {}

func (x *TabletSnapshotOpRequestPB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_backup_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabletSnapshotOpRequestPB.ProtoReflect.Descriptor instead.
func (*TabletSnapshotOpRequestPB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_backup_proto_rawDescGZIP(), []int{1}
}

func (x *TabletSnapshotOpRequestPB) GetDestUuid() []byte {
	if x != nil {
		return x.DestUuid
	}
	return nil
}

func (x *TabletSnapshotOpRequestPB) GetOperation() TabletSnapshotOpRequestPB_Operation {
	if x != nil {
		return x.Operation
	}
	return TabletSnapshotOpRequestPB_UNKNOWN
}

func (x *TabletSnapshotOpRequestPB) GetSnapshotId() []byte {
	if x != nil {
		return x.SnapshotId
	}
	return nil
}

func (x *TabletSnapshotOpRequestPB) GetTabletId() [][]byte {
	if x != nil {
		return x.TabletId
	}
	return nil
}

func (x *TabletSnapshotOpRequestPB) GetPropagatedHybridTime() uint64 {
	if x != nil {
		return x.PropagatedHybridTime
	}
	return 0
}

func (x *TabletSnapshotOpRequestPB) GetSnapshotDirOverride() string {
	if x != nil {
		return x.SnapshotDirOverride
	}
	return ""
}

func (x *TabletSnapshotOpRequestPB) GetSnapshotHybridTime() uint64 {
	if x != nil {
		return x.SnapshotHybridTime
	}
	return 0
}

func (x *TabletSnapshotOpRequestPB) GetRestorationHybridTime() uint64 {
	if x != nil {
		return x.RestorationHybridTime
	}
	return 0
}

func (x *TabletSnapshotOpRequestPB) GetExtraData() *any1.Any {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *TabletSnapshotOpRequestPB) GetImported() bool {
	if x != nil {
		return x.Imported
	}
	return false
}

func (x *TabletSnapshotOpRequestPB) GetScheduleId() []byte {
	if x != nil {
		return x.ScheduleId
	}
	return nil
}

func (x *TabletSnapshotOpRequestPB) GetRestorationId() []byte {
	if x != nil {
		return x.RestorationId
	}
	return nil
}

func (x *TabletSnapshotOpRequestPB) GetSchemaVersion() uint32 {
	if x != nil {
		return x.SchemaVersion
	}
	return 0
}

func (x *TabletSnapshotOpRequestPB) GetSchema() *common.SchemaPB {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *TabletSnapshotOpRequestPB) GetIndexes() []*common.IndexInfoPB {
	if x != nil {
		return x.Indexes
	}
	return nil
}

func (x *TabletSnapshotOpRequestPB) GetPreviousSnapshotHybridTime() uint64 {
	if x != nil {
		return x.PreviousSnapshotHybridTime
	}
	return 0
}

func (x *TabletSnapshotOpRequestPB) GetHide() bool {
	if x != nil {
		return x.Hide
	}
	return false
}

func (x *TabletSnapshotOpRequestPB) GetDbOid() int64 {
	if x != nil {
		return x.DbOid
	}
	return 0
}

func (x *TabletSnapshotOpRequestPB) GetColocatedTablesMetadata() []*TableMetadataPB {
	if x != nil {
		return x.ColocatedTablesMetadata
	}
	return nil
}

func (x *TabletSnapshotOpRequestPB) GetRetentionDurationHours() int32 {
	if x != nil {
		return x.RetentionDurationHours
	}
	return 0
}

type TabletSnapshotOpResponsePB struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Error                *TabletServerErrorPB   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	PropagatedHybridTime uint64                 `protobuf:"fixed64,2,opt,name=propagated_hybrid_time,json=propagatedHybridTime,proto3" json:"propagated_hybrid_time,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TabletSnapshotOpResponsePB) Reset() {
	*x = TabletSnapshotOpResponsePB{}
	mi := &file_yb_tserver_backup_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TabletSnapshotOpResponsePB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TabletSnapshotOpResponsePB) ProtoMessage() {}

func (x *TabletSnapshotOpResponsePB) ProtoReflect() protoreflect.Message {
	mi := &file_yb_tserver_backup_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TabletSnapshotOpResponsePB.ProtoReflect.Descriptor instead.
func (*TabletSnapshotOpResponsePB) Descriptor() ([]byte, []int) {
	return file_yb_tserver_backup_proto_rawDescGZIP(), []int{2}
}

func (x *TabletSnapshotOpResponsePB) GetError() *TabletServerErrorPB {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TabletSnapshotOpResponsePB) GetPropagatedHybridTime() uint64 {
	if x != nil {
		return x.PropagatedHybridTime
	}
	return 0
}

var File_yb_tserver_backup_proto protoreflect.FileDescriptor

var file_yb_tserver_backup_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x79, 0x62, 0x2f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x79, 0x62, 0x2e, 0x74, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x79, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x79, 0x62, 0x2f, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x01, 0x0a, 0x0f, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x42, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x79, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50,
	0x42, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x29, 0x0a, 0x07, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x42, 0x52, 0x07, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0xe4, 0x08, 0x0a, 0x19, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x4d, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e,
	0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x42, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x61,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61,
	0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a,
	0x15, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79,
	0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x12, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x15, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x79, 0x62,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x50, 0x42, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x29, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x79, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x42, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x1d,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x69, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68,
	0x69, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x62, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x62, 0x4f, 0x69, 0x64, 0x12, 0x57, 0x0a, 0x19, 0x63, 0x6f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x50, 0x42, 0x52, 0x17, 0x63, 0x6f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0xb6, 0x01,
	0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x42,
	0x4c, 0x45, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x54, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10,
	0x04, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x5f, 0x4d,
	0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x5f, 0x53, 0x59, 0x53, 0x5f, 0x43, 0x41, 0x54, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x06,
	0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49,
	0x53, 0x48, 0x45, 0x44, 0x10, 0x07, 0x22, 0x89, 0x01, 0x0a, 0x1a, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x42, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x50, 0x42, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x16,
	0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x79, 0x62, 0x72, 0x69,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x14, 0x70, 0x72,
	0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x64, 0x48, 0x79, 0x62, 0x72, 0x69, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x32, 0x7e, 0x0a, 0x19, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x61, 0x0a, 0x10, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x4f, 0x70, 0x12, 0x25, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4f,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x42, 0x1a, 0x26, 0x2e, 0x79, 0x62, 0x2e,
	0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x42, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x2e, 0x79, 0x62, 0x2e, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_yb_tserver_backup_proto_rawDescOnce sync.Once
	file_yb_tserver_backup_proto_rawDescData []byte
)

func file_yb_tserver_backup_proto_rawDescGZIP() []byte {
	file_yb_tserver_backup_proto_rawDescOnce.Do(func() {
		file_yb_tserver_backup_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_yb_tserver_backup_proto_rawDesc), len(file_yb_tserver_backup_proto_rawDesc)))
	})
	return file_yb_tserver_backup_proto_rawDescData
}

var file_yb_tserver_backup_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_yb_tserver_backup_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_yb_tserver_backup_proto_goTypes = []any{
	(TabletSnapshotOpRequestPB_Operation)(0), // 0: yb.tserver.TabletSnapshotOpRequestPB.Operation
	(*TableMetadataPB)(nil),                  // 1: yb.tserver.TableMetadataPB
	(*TabletSnapshotOpRequestPB)(nil),        // 2: yb.tserver.TabletSnapshotOpRequestPB
	(*TabletSnapshotOpResponsePB)(nil),       // 3: yb.tserver.TabletSnapshotOpResponsePB
	(*common.SchemaPB)(nil),                  // 4: yb.SchemaPB
	(*common.IndexInfoPB)(nil),               // 5: yb.IndexInfoPB
	(*any1.Any)(nil),                         // 6: google.protobuf.Any
	(*TabletServerErrorPB)(nil),              // 7: yb.tserver.TabletServerErrorPB
}
var file_yb_tserver_backup_proto_depIdxs = []int32{
	4, // 0: yb.tserver.TableMetadataPB.schema:type_name -> yb.SchemaPB
	5, // 1: yb.tserver.TableMetadataPB.indexes:type_name -> yb.IndexInfoPB
	0, // 2: yb.tserver.TabletSnapshotOpRequestPB.operation:type_name -> yb.tserver.TabletSnapshotOpRequestPB.Operation
	6, // 3: yb.tserver.TabletSnapshotOpRequestPB.extra_data:type_name -> google.protobuf.Any
	4, // 4: yb.tserver.TabletSnapshotOpRequestPB.schema:type_name -> yb.SchemaPB
	5, // 5: yb.tserver.TabletSnapshotOpRequestPB.indexes:type_name -> yb.IndexInfoPB
	1, // 6: yb.tserver.TabletSnapshotOpRequestPB.colocated_tables_metadata:type_name -> yb.tserver.TableMetadataPB
	7, // 7: yb.tserver.TabletSnapshotOpResponsePB.error:type_name -> yb.tserver.TabletServerErrorPB
	2, // 8: yb.tserver.TabletServerBackupService.TabletSnapshotOp:input_type -> yb.tserver.TabletSnapshotOpRequestPB
	3, // 9: yb.tserver.TabletServerBackupService.TabletSnapshotOp:output_type -> yb.tserver.TabletSnapshotOpResponsePB
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_yb_tserver_backup_proto_init() }
func file_yb_tserver_backup_proto_init() {
	if File_yb_tserver_backup_proto != nil {
		return
	}
	file_yb_tserver_tserver_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_yb_tserver_backup_proto_rawDesc), len(file_yb_tserver_backup_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yb_tserver_backup_proto_goTypes,
		DependencyIndexes: file_yb_tserver_backup_proto_depIdxs,
		EnumInfos:         file_yb_tserver_backup_proto_enumTypes,
		MessageInfos:      file_yb_tserver_backup_proto_msgTypes,
	}.Build()
	File_yb_tserver_backup_proto = out.File
	file_yb_tserver_backup_proto_goTypes = nil
	file_yb_tserver_backup_proto_depIdxs = nil
}
