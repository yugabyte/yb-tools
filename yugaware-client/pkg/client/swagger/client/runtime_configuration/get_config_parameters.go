// Code generated by go-swagger; DO NOT EDIT.

package runtime_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetConfigParams creates a new GetConfigParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetConfigParams() *GetConfigParams {
	return &GetConfigParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetConfigParamsWithTimeout creates a new GetConfigParams object
// with the ability to set a timeout on a request.
func NewGetConfigParamsWithTimeout(timeout time.Duration) *GetConfigParams {
	return &GetConfigParams{
		timeout: timeout,
	}
}

// NewGetConfigParamsWithContext creates a new GetConfigParams object
// with the ability to set a context for a request.
func NewGetConfigParamsWithContext(ctx context.Context) *GetConfigParams {
	return &GetConfigParams{
		Context: ctx,
	}
}

// NewGetConfigParamsWithHTTPClient creates a new GetConfigParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetConfigParamsWithHTTPClient(client *http.Client) *GetConfigParams {
	return &GetConfigParams{
		HTTPClient: client,
	}
}

/*
GetConfigParams contains all the parameters to send to the API endpoint

	for the get config operation.

	Typically these are written to a http.Request.
*/
type GetConfigParams struct {

	// CUUID.
	//
	// Format: uuid
	CUUID strfmt.UUID

	// IncludeInherited.
	IncludeInherited *bool

	// Scope.
	//
	// Format: uuid
	Scope strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetConfigParams) WithDefaults() *GetConfigParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get config params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetConfigParams) SetDefaults() {
	var (
		includeInheritedDefault = bool(false)
	)

	val := GetConfigParams{
		IncludeInherited: &includeInheritedDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get config params
func (o *GetConfigParams) WithTimeout(timeout time.Duration) *GetConfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get config params
func (o *GetConfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get config params
func (o *GetConfigParams) WithContext(ctx context.Context) *GetConfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get config params
func (o *GetConfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get config params
func (o *GetConfigParams) WithHTTPClient(client *http.Client) *GetConfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get config params
func (o *GetConfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCUUID adds the cUUID to the get config params
func (o *GetConfigParams) WithCUUID(cUUID strfmt.UUID) *GetConfigParams {
	o.SetCUUID(cUUID)
	return o
}

// SetCUUID adds the cUuid to the get config params
func (o *GetConfigParams) SetCUUID(cUUID strfmt.UUID) {
	o.CUUID = cUUID
}

// WithIncludeInherited adds the includeInherited to the get config params
func (o *GetConfigParams) WithIncludeInherited(includeInherited *bool) *GetConfigParams {
	o.SetIncludeInherited(includeInherited)
	return o
}

// SetIncludeInherited adds the includeInherited to the get config params
func (o *GetConfigParams) SetIncludeInherited(includeInherited *bool) {
	o.IncludeInherited = includeInherited
}

// WithScope adds the scope to the get config params
func (o *GetConfigParams) WithScope(scope strfmt.UUID) *GetConfigParams {
	o.SetScope(scope)
	return o
}

// SetScope adds the scope to the get config params
func (o *GetConfigParams) SetScope(scope strfmt.UUID) {
	o.Scope = scope
}

// WriteToRequest writes these params to a swagger request
func (o *GetConfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cUUID
	if err := r.SetPathParam("cUUID", o.CUUID.String()); err != nil {
		return err
	}

	if o.IncludeInherited != nil {

		// query param includeInherited
		var qrIncludeInherited bool

		if o.IncludeInherited != nil {
			qrIncludeInherited = *o.IncludeInherited
		}
		qIncludeInherited := swag.FormatBool(qrIncludeInherited)
		if qIncludeInherited != "" {

			if err := r.SetQueryParam("includeInherited", qIncludeInherited); err != nil {
				return err
			}
		}
	}

	// path param scope
	if err := r.SetPathParam("scope", o.Scope.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
