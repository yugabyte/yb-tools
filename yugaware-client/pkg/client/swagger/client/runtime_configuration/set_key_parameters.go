// Code generated by go-swagger; DO NOT EDIT.

package runtime_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSetKeyParams creates a new SetKeyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetKeyParams() *SetKeyParams {
	return &SetKeyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetKeyParamsWithTimeout creates a new SetKeyParams object
// with the ability to set a timeout on a request.
func NewSetKeyParamsWithTimeout(timeout time.Duration) *SetKeyParams {
	return &SetKeyParams{
		timeout: timeout,
	}
}

// NewSetKeyParamsWithContext creates a new SetKeyParams object
// with the ability to set a context for a request.
func NewSetKeyParamsWithContext(ctx context.Context) *SetKeyParams {
	return &SetKeyParams{
		Context: ctx,
	}
}

// NewSetKeyParamsWithHTTPClient creates a new SetKeyParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetKeyParamsWithHTTPClient(client *http.Client) *SetKeyParams {
	return &SetKeyParams{
		HTTPClient: client,
	}
}

/*
SetKeyParams contains all the parameters to send to the API endpoint

	for the set key operation.

	Typically these are written to a http.Request.
*/
type SetKeyParams struct {

	// CUUID.
	//
	// Format: uuid
	CUUID strfmt.UUID

	// Key.
	Key string

	/* NewValue.

	   New value for config key
	*/
	NewValue string

	// Scope.
	//
	// Format: uuid
	Scope strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set key params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetKeyParams) WithDefaults() *SetKeyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set key params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetKeyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the set key params
func (o *SetKeyParams) WithTimeout(timeout time.Duration) *SetKeyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set key params
func (o *SetKeyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set key params
func (o *SetKeyParams) WithContext(ctx context.Context) *SetKeyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set key params
func (o *SetKeyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set key params
func (o *SetKeyParams) WithHTTPClient(client *http.Client) *SetKeyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set key params
func (o *SetKeyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCUUID adds the cUUID to the set key params
func (o *SetKeyParams) WithCUUID(cUUID strfmt.UUID) *SetKeyParams {
	o.SetCUUID(cUUID)
	return o
}

// SetCUUID adds the cUuid to the set key params
func (o *SetKeyParams) SetCUUID(cUUID strfmt.UUID) {
	o.CUUID = cUUID
}

// WithKey adds the key to the set key params
func (o *SetKeyParams) WithKey(key string) *SetKeyParams {
	o.SetKey(key)
	return o
}

// SetKey adds the key to the set key params
func (o *SetKeyParams) SetKey(key string) {
	o.Key = key
}

// WithNewValue adds the newValue to the set key params
func (o *SetKeyParams) WithNewValue(newValue string) *SetKeyParams {
	o.SetNewValue(newValue)
	return o
}

// SetNewValue adds the newValue to the set key params
func (o *SetKeyParams) SetNewValue(newValue string) {
	o.NewValue = newValue
}

// WithScope adds the scope to the set key params
func (o *SetKeyParams) WithScope(scope strfmt.UUID) *SetKeyParams {
	o.SetScope(scope)
	return o
}

// SetScope adds the scope to the set key params
func (o *SetKeyParams) SetScope(scope strfmt.UUID) {
	o.Scope = scope
}

// WriteToRequest writes these params to a swagger request
func (o *SetKeyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cUUID
	if err := r.SetPathParam("cUUID", o.CUUID.String()); err != nil {
		return err
	}

	// path param key
	if err := r.SetPathParam("key", o.Key); err != nil {
		return err
	}
	if err := r.SetBodyParam(o.NewValue); err != nil {
		return err
	}

	// path param scope
	if err := r.SetPathParam("scope", o.Scope.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
