// Code generated by go-swagger; DO NOT EDIT.

package universe_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteUniverseParams creates a new DeleteUniverseParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteUniverseParams() *DeleteUniverseParams {
	return &DeleteUniverseParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteUniverseParamsWithTimeout creates a new DeleteUniverseParams object
// with the ability to set a timeout on a request.
func NewDeleteUniverseParamsWithTimeout(timeout time.Duration) *DeleteUniverseParams {
	return &DeleteUniverseParams{
		timeout: timeout,
	}
}

// NewDeleteUniverseParamsWithContext creates a new DeleteUniverseParams object
// with the ability to set a context for a request.
func NewDeleteUniverseParamsWithContext(ctx context.Context) *DeleteUniverseParams {
	return &DeleteUniverseParams{
		Context: ctx,
	}
}

// NewDeleteUniverseParamsWithHTTPClient creates a new DeleteUniverseParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteUniverseParamsWithHTTPClient(client *http.Client) *DeleteUniverseParams {
	return &DeleteUniverseParams{
		HTTPClient: client,
	}
}

/*
DeleteUniverseParams contains all the parameters to send to the API endpoint

	for the delete universe operation.

	Typically these are written to a http.Request.
*/
type DeleteUniverseParams struct {

	// CUUID.
	//
	// Format: uuid
	CUUID strfmt.UUID

	// IsDeleteAssociatedCerts.
	IsDeleteAssociatedCerts *bool

	// IsDeleteBackups.
	IsDeleteBackups *bool

	// IsForceDelete.
	IsForceDelete *bool

	// UniUUID.
	//
	// Format: uuid
	UniUUID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete universe params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteUniverseParams) WithDefaults() *DeleteUniverseParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete universe params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteUniverseParams) SetDefaults() {
	var (
		isDeleteAssociatedCertsDefault = bool(false)

		isDeleteBackupsDefault = bool(false)

		isForceDeleteDefault = bool(false)
	)

	val := DeleteUniverseParams{
		IsDeleteAssociatedCerts: &isDeleteAssociatedCertsDefault,
		IsDeleteBackups:         &isDeleteBackupsDefault,
		IsForceDelete:           &isForceDeleteDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the delete universe params
func (o *DeleteUniverseParams) WithTimeout(timeout time.Duration) *DeleteUniverseParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete universe params
func (o *DeleteUniverseParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete universe params
func (o *DeleteUniverseParams) WithContext(ctx context.Context) *DeleteUniverseParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete universe params
func (o *DeleteUniverseParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete universe params
func (o *DeleteUniverseParams) WithHTTPClient(client *http.Client) *DeleteUniverseParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete universe params
func (o *DeleteUniverseParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCUUID adds the cUUID to the delete universe params
func (o *DeleteUniverseParams) WithCUUID(cUUID strfmt.UUID) *DeleteUniverseParams {
	o.SetCUUID(cUUID)
	return o
}

// SetCUUID adds the cUuid to the delete universe params
func (o *DeleteUniverseParams) SetCUUID(cUUID strfmt.UUID) {
	o.CUUID = cUUID
}

// WithIsDeleteAssociatedCerts adds the isDeleteAssociatedCerts to the delete universe params
func (o *DeleteUniverseParams) WithIsDeleteAssociatedCerts(isDeleteAssociatedCerts *bool) *DeleteUniverseParams {
	o.SetIsDeleteAssociatedCerts(isDeleteAssociatedCerts)
	return o
}

// SetIsDeleteAssociatedCerts adds the isDeleteAssociatedCerts to the delete universe params
func (o *DeleteUniverseParams) SetIsDeleteAssociatedCerts(isDeleteAssociatedCerts *bool) {
	o.IsDeleteAssociatedCerts = isDeleteAssociatedCerts
}

// WithIsDeleteBackups adds the isDeleteBackups to the delete universe params
func (o *DeleteUniverseParams) WithIsDeleteBackups(isDeleteBackups *bool) *DeleteUniverseParams {
	o.SetIsDeleteBackups(isDeleteBackups)
	return o
}

// SetIsDeleteBackups adds the isDeleteBackups to the delete universe params
func (o *DeleteUniverseParams) SetIsDeleteBackups(isDeleteBackups *bool) {
	o.IsDeleteBackups = isDeleteBackups
}

// WithIsForceDelete adds the isForceDelete to the delete universe params
func (o *DeleteUniverseParams) WithIsForceDelete(isForceDelete *bool) *DeleteUniverseParams {
	o.SetIsForceDelete(isForceDelete)
	return o
}

// SetIsForceDelete adds the isForceDelete to the delete universe params
func (o *DeleteUniverseParams) SetIsForceDelete(isForceDelete *bool) {
	o.IsForceDelete = isForceDelete
}

// WithUniUUID adds the uniUUID to the delete universe params
func (o *DeleteUniverseParams) WithUniUUID(uniUUID strfmt.UUID) *DeleteUniverseParams {
	o.SetUniUUID(uniUUID)
	return o
}

// SetUniUUID adds the uniUuid to the delete universe params
func (o *DeleteUniverseParams) SetUniUUID(uniUUID strfmt.UUID) {
	o.UniUUID = uniUUID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteUniverseParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cUUID
	if err := r.SetPathParam("cUUID", o.CUUID.String()); err != nil {
		return err
	}

	if o.IsDeleteAssociatedCerts != nil {

		// query param isDeleteAssociatedCerts
		var qrIsDeleteAssociatedCerts bool

		if o.IsDeleteAssociatedCerts != nil {
			qrIsDeleteAssociatedCerts = *o.IsDeleteAssociatedCerts
		}
		qIsDeleteAssociatedCerts := swag.FormatBool(qrIsDeleteAssociatedCerts)
		if qIsDeleteAssociatedCerts != "" {

			if err := r.SetQueryParam("isDeleteAssociatedCerts", qIsDeleteAssociatedCerts); err != nil {
				return err
			}
		}
	}

	if o.IsDeleteBackups != nil {

		// query param isDeleteBackups
		var qrIsDeleteBackups bool

		if o.IsDeleteBackups != nil {
			qrIsDeleteBackups = *o.IsDeleteBackups
		}
		qIsDeleteBackups := swag.FormatBool(qrIsDeleteBackups)
		if qIsDeleteBackups != "" {

			if err := r.SetQueryParam("isDeleteBackups", qIsDeleteBackups); err != nil {
				return err
			}
		}
	}

	if o.IsForceDelete != nil {

		// query param isForceDelete
		var qrIsForceDelete bool

		if o.IsForceDelete != nil {
			qrIsForceDelete = *o.IsForceDelete
		}
		qIsForceDelete := swag.FormatBool(qrIsForceDelete)
		if qIsForceDelete != "" {

			if err := r.SetQueryParam("isForceDelete", qIsForceDelete); err != nil {
				return err
			}
		}
	}

	// path param uniUUID
	if err := r.SetPathParam("uniUUID", o.UniUUID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
